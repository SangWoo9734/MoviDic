[{"C:\\Users\\psu84\\movidic\\movie_react\\src\\index.js":"1","C:\\Users\\psu84\\movidic\\movie_react\\src\\reportWebVitals.js":"2","C:\\Users\\psu84\\movidic\\movie_react\\src\\App.js":"3","C:\\Users\\psu84\\movidic\\movie_react\\src\\main.js":"4","C:\\Users\\psu84\\movidic\\movie_react\\src\\search.js":"5","C:\\Users\\psu84\\movidic\\movie_react\\src\\history.js":"6","C:\\Users\\psu84\\movidic\\movie_react\\src\\fbase.js":"7"},{"size":592,"mtime":1633623222965,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":5285,"mtime":1636438263817,"results":"11","hashOfConfig":"9"},{"size":5946,"mtime":1636572227489,"results":"12","hashOfConfig":"9"},{"size":16521,"mtime":1636470379594,"results":"13","hashOfConfig":"9"},{"size":9616,"mtime":1636474102365,"results":"14","hashOfConfig":"9"},{"size":601,"mtime":1636354201519,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"bn6edh",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\psu84\\movidic\\movie_react\\src\\index.js",[],["34","35"],"C:\\Users\\psu84\\movidic\\movie_react\\src\\reportWebVitals.js",[],"C:\\Users\\psu84\\movidic\\movie_react\\src\\App.js",["36","37","38","39","40"],"import { Navbar, Container, Nav, Modal, Button} from 'react-bootstrap';\nimport React, { useEffect, useState } from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\nimport whale from './img/whale.png';\nimport google from './img/google.png';\n\nimport Boxoffice from './main.js';\nimport Search from './search.js';\nimport History from './history.js';\nimport { authService, firebaseInstance } from './fbase';\n\nfunction App() {\n\n\tvar [loginModal, setLoginModal] = useState(false);\n\tvar [loginState, setLoginState] = useState(false);\n\tvar [userInfo, setUserInfo] = useState({});\n\n\tconst onLogOutClick = () => {\n\t\tauthService.signOut();\n\t\tsetLoginState(false);\n\t\tsetUserInfo({});\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Navbar bg=\"dark\" variant=\"dark\">\n\t\t\t\t<Container className='text-center'>\n\t\t\t\t\t\t<Navbar.Brand href=\"/\">\n\t\t\t\t\t\t\t<img src={whale} style={{width: '40px', height : '40px', marginRight : '10px'}} />\n\t\t\t\t\t\t\t<span>MOVIDIC</span>\n\t\t\t\t\t\t</Navbar.Brand>\n\t\t\t\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\n\t\t\t\t\t\t\t<Nav className=\"me-auto\">\n\t\t\t\t\t\t\t\t<Nav.Link href=\"/search\">SEARCH</Nav.Link>\n\t\t\t\t\t\t\t\t<Nav.Link href=\"/history\">HISTORY</Nav.Link>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tloginState\n\t\t\t\t\t\t\t\t\t? <Nav.Link href=\"/my\">MY</Nav.Link>\n\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t\t<Nav>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tloginState\n\t\t\t\t\t\t\t\t\t? <button className='btn btn-primary' onClick={() => {\n\t\t\t\t\t\t\t\t\t\tonLogOutClick();\n\t\t\t\t\t\t\t\t\t\talert('로그아웃 되었습니다.');\n\t\t\t\t\t\t\t\t\t}}>LOGOUT</button>\n\t\t\t\t\t\t\t\t\t: <button className='btn btn-primary' onClick={() => {setLoginModal(true)}}>LOGIN</button>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t\t\t\n\t\t\t\t</Container>\n\t\t\t</Navbar>\n\n\t\t\t\n\t\t\t< Login show = {loginModal} onHide={() => setLoginModal(false)} setLoginState={setLoginState} setUserInfo={setUserInfo}/>\n\t\t\t\n\t\t\t<BrowserRouter>\n\t\t\t\t<div>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path={\"/\"} component={Boxoffice} />\n\t\t\t\t\t\t<Route exact path={\"/search\"} component={Search} />\n\t\t\t\t\t\t<Route exact path={\"/history\"} component={History} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</BrowserRouter>\n\n\t\t\t<div className='footer'>\n\t\t\t\t<p>CopyRight By Sangwoo</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction Login(props) {\n\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [firstName, setFirstName] = useState('');\n\tconst [lastName, setLastName] = useState('');\n\tconst [newAcc, setNewAcc] = useState(true);\n\n\tconst onChange = (e) => {\n\t\tconst {target : {name, value}} = e;\n\t\tif (name === 'email'){\n\t\t\tsetEmail(value)\n\t\t} else if (name === 'password') {\n\t\t\tsetPassword(value);\n\t\t} else if (name === 'firstName') {\n\t\t\tsetFirstName(value);\n\t\t} else if (name === 'lastName') {\n\t\t\tsetLastName(value);\n\t\t}\n\t}\n\n\tconst onSubmit = async (e) => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tlet data;\n\t\t\tif (newAcc) {\n\t\t\t\t// login\n\t\t\t\tdata = await authService.signInWithEmailAndPassword(email, password);\n\t\t\t  } else {\n\t\t\t\t// create account\n\t\t\t\tdata = await authService.createUserWithEmailAndPassword(email, password);\n\t\t\t  }\n\t\t\tconsole.log(data);\n\t\t\tsetEmail('');\n\t\t\tsetPassword('');\n\t\t\tprops.onHide(false);\n\t\t\tprops.setLoginState(true);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\talert('유효한 사용자가 없습니다.');\n\t\t}\n\t}\n\n\tconst onGoogleClick = async (event) => {\n\t\tconst {target: {name}} = event;\n\t\tlet provider;\n\t\tif (name === 'google') {\n\t\t  provider = new firebaseInstance.auth.GoogleAuthProvider();\n\t\t}\n\t\tconst data = await authService.signInWithPopup(provider);\n\t\tconsole.log(data.additionalUserInfo.profile);\n\t\tprops.onHide(false);\n\t\tprops.setLoginState(true)\n\t}\n\n\t\n\tconst toggleAccount = () => setNewAcc((prev) => !prev);\n\treturn (\n\t\t<Modal\n\t\tshow = {props.show}\n\t\tonHide = {props.onHide}\n\t\tclassName='login-modal'\n\t\tsize=\"lg\"\n\t\taria-labelledby=\"contained-modal-title-vcenter\"\n\t\tcentered\n\t\t>\n\t\t\t<Modal.Header >\n\t\t\t\t<Modal.Title id=\"contained-modal-title-vcenter\">Login</Modal.Title>\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Body>\n\t\t\t\t<form onSubmit={onSubmit}>\n\t\t\t\t\t{\n\t\t\t\t\t\t!newAcc\n\t\t\t\t\t\t? <span><input className='login-input' name=\"firstName\" type=\"text\" placeholder=\"First Name\" required value={firstName} onChange={onChange}/>\n\t\t\t\t\t\t<input className='login-input' name=\"lastName\" type=\"text\" placeholder=\"Last Name\" required value={lastName} onChange={onChange}/></span>\n\t\t\t\t\t\t: \tnull\n\t\t\t\t\t}\n\t\t\t\t\t<input className='login-input' name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange}/>\n\t\t\t\t\t<input className='login-input' name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange}/>\n\t\t\t\t\t\n\t\t\t\t\t<input  className={ newAcc ? 'btn btn-primary' : 'btn btn-success' } type=\"submit\" value={ newAcc ? \"Login\" : \"Create Account\" } />\n\t\t\t\t</form>\n\t\t\t</Modal.Body>\n\t\t\t<Modal.Footer>\n\t\t\t\t<button name=\"google\" className='btn btn-secondary' onClick={onGoogleClick}><img src={google} style={{width: '20px', height : '20px', marginBottom : '5px', marginRight : '10px'}} />Login with Google</button>\n\t\t\t\t<button className={ newAcc ? 'btn btn-success' : 'btn btn-primary' } onClick={toggleAccount}>{newAcc ? \"Create New Account\" : \"Login\"}</button>\n\t\t\t\t<Button onClick={props.onHide}>Close</Button>\n\t\t\t</Modal.Footer>\n\t\t</Modal>\n\t)\n}\n\n\n\nexport default App;\n","C:\\Users\\psu84\\movidic\\movie_react\\src\\main.js",["41","42","43","44","45","46"],"C:\\Users\\psu84\\movidic\\movie_react\\src\\search.js",["47","48","49","50","51","52","53","54","55","56","57","58"],"import { Form, Button, Row, Col, Accordion, Card, Modal, Pagination, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport React, { useEffect, useState }from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\nimport no from './img/noimage.png';\r\n\r\n\r\nimport './Search.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction Search() {\r\n    \r\n    \r\n    var [genre, genre_change] = useState({\r\n        '드라마' : 1, '판타지' : 2, '서부': 3, '공포' : 4, '로맨스': 5, '모험':  6, '스릴러': 7, '느와르' : 8,\r\n        '컬트' : 9, '다큐멘터리' : 10, '코미디' : 11, '가족' : 12, '미스터리' : 13, '전쟁' : 14, '애니메이션' : 15,\r\n        '범죄' : 16, '뮤지컬' : 17, 'SF' : 18, '액션' : 19, '무협' : 20, '에로' : 21, '서스펜스' : 22, '서사' : 23, '블랙코미디' : 24,\r\n        '실험' : 25, '영화카툰' : 26, '영화음악' : 27, '영화패러디포스터' : 28\r\n    })\r\n    \r\n    var [searchWord, setSearchWord] = useState('');\r\n    var [startDate, setStartDate] = useState(new Date());\r\n    var [endDate, setEndDate] = useState(new Date());\r\n    var [date_search, setDate_search] = useState(true);\r\n    var [date_selected, setDate_selected] = useState(false);\r\n    var [genre_selected, setGenre_selected] = useState(false);\r\n    var [selectGenre, setSelectGenre] = useState(0);\r\n    var [searchResult, searchResult_change] = useState([])\r\n    var [showResult, showResult_change] = useState(false);\r\n    var [modalState, setModalState] = useState(false);\r\n    var [items, setItems] = useState([]);\r\n    var [quote, setQuote] = useState({});\r\n\r\n    useEffect(() => {\r\n        var quoteNum = Math.floor(Math.random() * 50) + 1;\r\n\r\n        axios.get('/public/quote', {\r\n            params : {\r\n                q : quoteNum,\r\n            }\r\n        }).then( result => {\r\n            setQuote(result.data);\r\n        })\r\n\r\n    }, []);\r\n    \r\n\r\n    const handlerSubmit = (e) => {\r\n        e.preventDefault();\r\n        var setting;\r\n        console.log();\r\n        if (!date_search) {\r\n            setting = {\r\n                query : searchWord,\r\n                genre : selectGenre,\r\n                display : 100,\r\n                yearfrom : startDate.getFullYear(),\r\n                yearto : endDate.getFullYear(),\r\n            }\r\n        }\r\n        else {\r\n            setting = {\r\n                query : searchWord,\r\n                genre : selectGenre,\r\n                display : 100,\r\n            }\r\n        }\r\n        \r\n        axios.get('/public/searchList', {\r\n            params : setting,\r\n        })\r\n        .then(res => {\r\n            var result = res.data;\r\n\r\n            result.sort(function (a, b) {\r\n                if (a.pubDate > b.pubDate) {\r\n                  return -1;\r\n                }\r\n                if (a.pubDate < b.pubDate) {\r\n                  return 1;\r\n                }\r\n                // a must be equal to b\r\n                return 0;\r\n              });\r\n            showResult_change(false); // Component 재랜더링을 위해 검색결과를 없애기\r\n            searchResult_change(result);\r\n            showResult_change(true);\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='container mt-4'>\r\n            <div className='top-box mt-5 mb-5'>\r\n                <div className='top-title h1'>SEARCH MOVIE</div>\r\n                <div className=''>\r\n                    <div className=\"quote-content font-italic \">\"{quote.text}\"</div>\r\n                    <div className=\"quote-info font-italic text-right\">- {quote.title} / {quote.year} -</div>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <div className='search-box'>\r\n                <Form onSubmit={handlerSubmit}>\r\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"\">\r\n                        <Form.Label column xs={2} style={{borderRight : '1px solid white'}}>제 목</Form.Label>\r\n                        <Col xs={10}>\r\n                            <Form.Control type=\"text\" placeholder=\"Search...\" onChange={ e => {\r\n                                setSearchWord(e.target.value);\r\n                            }}/>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    \r\n                        \r\n                    <Accordion>\r\n                        <Accordion.Item eventKey=\"0\" >\r\n                            <Accordion.Header className='search-detail'>Search Detail</Accordion.Header>\r\n                            <Accordion.Body className='search-detail'>\r\n                                <Form.Group as={Row} className=\"mb-3 genreGroup\" controlId=\"\">\r\n                                    <Form.Label column  xs={2} style={{ borderRight : '1px solid #212529'}}>장 르</Form.Label>\r\n                                    <Col key={'inline-radio'} xs={10} style={{textAlign : 'left'}} >\r\n                                        <Form.Check type={'radio'} inline label={\"전체\"} name=\"group1\" value={'전체'} id={'inline-radio-0'} className=\"genreName\"  onClick={(e) => {\r\n                                            setSelectGenre(0);\r\n                                        }} />\r\n                                        {\r\n                                            Object.keys(genre).map(function(g, i ){\r\n                                                return <Form.Check type={'radio'} inline label={g} name=\"group1\" value={g} id={'inline-radio-' + i} className=\"genreName\" key={i} onClick={(e) => {\r\n                                                    setSelectGenre(genre[e.target.value]);\r\n                                                }} />\r\n                                            })\r\n                                        }\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row} className=\"mb-3 genreGroup\" controlId=\"\">\r\n                                    <Form.Label column xs={2} style={{ borderRight : '1px solid #212529'}}>개봉연도</Form.Label>\r\n                                    <Col xs={10} className='mt-2 search-year'>\r\n                                        <div key = 'default-checkbox' className=\"mb-3 w-50\">\r\n                                            <Form.Check\r\n                                                    checked={!date_search}\r\n                                                    type = 'checkbox'\r\n                                                    id = 'default-checkbox'\r\n                                                    label = '날짜로 검색'\r\n                                                    onChange = {() => {\r\n                                                        setDate_search(!date_search);\r\n                                                    }}\r\n                                                />\r\n                                        </div>\r\n                                        <div className=\"datepicker-content\">\r\n                                            <DatePicker \r\n                                                selected={startDate}\r\n                                                onChange={(date) => {\r\n                                                    if (date > endDate){\r\n                                                        alert('잘못된 날짜 설정입니다.');\r\n                                                    } else {\r\n                                                        setStartDate(date)\r\n                                                    }\r\n                                                }}\r\n                                                showYearPicker\r\n                                                dateFormat=\"yyyy\"\r\n                                                className='datepicker'\r\n                                                disabled = {date_search}/>\r\n                                        </div>\r\n                                        <div className=\"datepicker-style datepicker-content\" > 년 ~</div>\r\n                                        <div className=\"datepicker-content\">\r\n                                            <DatePicker \r\n                                                selected={endDate}\r\n                                                onChange={(date) => {\r\n                                                    if (date < startDate){\r\n                                                        alert('잘못된 날짜 설정입니다.');\r\n                                                    } else {\r\n                                                        setEndDate(date);\r\n                                                    }\r\n                                                }}\r\n                                                showYearPicker\r\n                                                dateFormat=\"yyyy\"\r\n                                                className='datepicker'\r\n                                                disabled = {date_search}/>\r\n                                        </div>\r\n                                        <div className=\"datepicker-style datepicker-content\" > 년</div>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                    </Accordion>\r\n\r\n                    <Button variant=\"primary\" className=\"mt-3 search-result\" type=\"submit\" >Search</Button>\r\n                </Form>\r\n\r\n            </div>\r\n            \r\n            {\r\n                showResult\r\n                ? <SearchResult word={searchWord} result={searchResult} modalState={modalState} setModalState={setModalState} className=\"pb-5\"/>\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction SearchResult(props) {\r\n\r\n    var [searchResult, searchResult_change] = useState(props.result);\r\n    var [page, setPage] = useState(1);\r\n    var [pageComp, setPageComp] = useState([]);\r\n    var [modalData, setModalData] = useState({});\r\n    \r\n    useEffect(() => {\r\n        let items = [];\r\n        for (let number = 1; number <= Math.ceil(searchResult.length/20); number++) {\r\n            items.push(\r\n            <Pagination.Item key={number} active={number === page} onClick={() => {\r\n                setPage(number);\r\n                window.scrollTo(0,0);\r\n            }}>\r\n                {number}\r\n            </Pagination.Item>,\r\n            );\r\n        }\r\n        setPageComp(items);\r\n    }, [page])\r\n    \r\n    \r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <div>\r\n                <h2 style={{float:'left', margin:'0'}}><span className='h2 text-primary'>\"{props.word}\"</span> 에 대한 검색결과</h2>\r\n                <p style={{float:'right'}}>총 <span className='h3 text-primary'>{searchResult.length}</span> 개</p>\r\n            </div>\r\n            <div style={{clear : 'both'}}></div>\r\n            <hr style={{marginTop : '0'}}/>\r\n\r\n            <div className='row searchResult-list'>\r\n                <Row style={{margin : 'auto'}}>\r\n                    {\r\n                        \r\n                        searchResult.slice((page-1) * 20, (page-1) * 20 + 20).map(function(m, i) {\r\n                            return (\r\n                            <Col className=\"mt-3 mb-2\" xs={6} md={4} lg={3} key={i}>\r\n                                <Movie source={m} setModalData={setModalData} setModalState = {props.setModalState}/>\r\n                            </Col>\r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n            </div>\r\n\r\n            {\r\n                props.modalState\r\n                ? <Moviedetail modalState={props.modalState} onHide={() => props.setModalState(false)} modalData={modalData}/>\r\n                : null\r\n            }\r\n\r\n            <Pagination>{pageComp}</Pagination>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Moviedetail(props) {\r\n    var [like, setLike] = useState(false)\r\n    var [posterUrl, setPosterUrl] = useState('');\r\n\r\n    useEffect(() => {\r\n        axios.get('/public/poster',{\r\n            params : {\r\n                code : props.modalData.link.split(\"=\")[1],\r\n            }\r\n        })\r\n        .then(res => {\r\n            setPosterUrl(res.data);\r\n        })\r\n    }, [props.modalData])\r\n\r\n    const renderTooltip = (props) => (\r\n        <Tooltip id=\"button-tooltip\" {...props}>\r\n          Like\r\n        </Tooltip>\r\n      );\r\n\r\n    return (\r\n        <Modal\r\n            show = {props.modalState}\r\n            onHide = {props.onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            className = \"search-modal\"\r\n            >\r\n            <Modal.Header closeButton/>\r\n            <Modal.Body>\r\n                <Row className='modal-info'>\r\n                    <Col xs={3} className=\"modal-img\">\r\n                        <img className=\"\" src={ posterUrl === \"\" ? null : posterUrl }/>\r\n                    </Col>\r\n                    <Col xs={9} className=\"modal-detail\">\r\n                        <div className=\"modal-titleBox mb-3\">\r\n                            <div id=\"contained-modal-title-vcenter\" className=\"modal-title\">{props.modalData.title.split(/<b>|<\\/b>/g).join(\"\")}</div>\r\n                            <div id=\"contained-modal-title-vcenter\" className=\"modal-sub\">{props.modalData.subtitle.split(/<b>|<\\/b>/g).join(\"\")} / {props.modalData.pubDate}</div>\r\n                        </div>\r\n                        <div className='mt-2 mb-2'><span>런타임 : </span></div>\r\n                        <div className='mt-2 mb-2'><span>국가 / 장르 : </span></div>\r\n                        <div className='mt-2 mb-2'><span>감독 : </span>{props.modalData.director.split(\"|\").slice(0, -1).join(', ')}</div>\r\n                        <div className='mt-2 mb-2'><span>배우 : </span>{props.modalData.actor.split(\"|\").slice(0, -1).join(', ')}</div>\r\n                        <div className='mt-2 mb-2'><span>평점 : </span>⭐ {props.modalData.userRating}</div>\r\n                        <div className='mt-2 mb-2'><span>관객 수 : </span></div>\r\n                        <div className='mt-2 mb-2'><span>사이트 : </span><a target=\"_blank\" href={props.modalData.link }>바로가기</a></div>\r\n                        <OverlayTrigger\r\n                            placement=\"bottom\"\r\n                            delay={{ show: 50, hide: 50 }}\r\n                            overlay={renderTooltip}\r\n                            >\r\n                            <button className=\"btn btn-secondary like\" onClick = {() => setLike(!like)} style={\r\n                                like\r\n                                ? ({'color' : 'red'})\r\n                                : null\r\n                            }> ♥ </button>\r\n                        </OverlayTrigger>\r\n                        \r\n                    </Col>\r\n                    <hr className=\"mt-3 mb-3\"/>\r\n                    <Col xs={12} className=\"modal-analy\">\r\n                        <p>여기에 뭐 넣지</p>\r\n                    </Col>\r\n                </Row>\r\n                \r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nfunction Movie(props) {\r\n\r\n\r\n    return (\r\n        <Card  className=\"searchResult_movie\" onClick={() => {\r\n            props.setModalData(props.source);\r\n            props.setModalState(true);\r\n        }} >\r\n            <div className=\"searchResult_img\" >\r\n                <Card.Img variant=\"top\" src={ props.source.image === \"\" ? no : props.source.image } />\r\n            </div>\r\n            <Card.Body className=\"searchReuslt_content\">\r\n                <Card.Title className=\"searchResult_title\">{props.source.title.split(/<b>|<\\/b>/g).join(\"\")}</Card.Title>\r\n                <Card.Title className=\"searchResult_subtitle\">{props.source.subtitle.split(/<b>|<\\/b>/g).join(\"\")}</Card.Title>\r\n                \r\n                <Card.Text className=\"searchResult_info mt-4\">{props.source.director.split(\"|\").length > 2 ? props.source.director.split(\"|\")[0] + ' 외 ' + (props.source.director.split(\"|\").length - 2) + '명' : props.source.director.split(\"|\").slice(0, -1).join()} / {props.source.pubDate}</Card.Text>\r\n                <Card.Text className=\"searchResult_info\">평점⭐ {props.source.userRating}</Card.Text>\r\n            </Card.Body>\r\n                \r\n            <div className='cover'></div>\r\n        </Card>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Search;","C:\\Users\\psu84\\movidic\\movie_react\\src\\history.js",["59","60","61","62","63","64"],"import { Button, Card, ListGroup, Row, Col, Accordion, Table} from 'react-bootstrap';\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport DatePicker from \"react-datepicker\";\r\nimport ReactDOM from 'react-dom';\r\nimport { LinearProgress } from '../node_modules/@mui/material';\r\n\r\nimport './History.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction App() {\r\n\r\n    var [quote, setQuote] = useState({});\r\n    var [movieChart, setMovieChart] = useState([]);\r\n    var [startDate, setStartDate] = useState(new Date());\r\n    var [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        var quoteNum = Math.floor(Math.random() * 50) + 1;\r\n\r\n        axios.get('/public/quote', {\r\n            params : {\r\n                q : quoteNum,\r\n            }\r\n        }).then( result => {\r\n            setQuote(result.data);\r\n        })\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        setLoading(true);\r\n\r\n        var today = startDate;\r\n        var year = today.getFullYear();\r\n        var month = (today.getMonth() + 1) >= 10 ? (today.getMonth() + 1) : '0' + (today.getMonth() + 1);\r\n        var day = (today.getDate() - 1) >= 10 ? (today.getDate() - 1) : '0' + (today.getDate() - 1);\r\n        \r\n        axios.get('/public/history', {\r\n            params : {\r\n                date : parseInt(year + \"\" + month + \"\" + day),\r\n            }\r\n        })\r\n        .then(res => {\r\n            let timer = setTimeout(()=>{ \r\n                setLoading(false);\r\n                setMovieChart(res.data);\r\n            }, 500);\r\n            \r\n        })\r\n    }, [startDate])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className='top-box mt-5 mb-5'>\r\n                <div className='top-title h1'>MOVIE HISTORY</div>\r\n                <div className=''>\r\n                    <div className=\"quote-content font-italic \">\"{quote.text}\"</div>\r\n                    <div className=\"quote-info font-italic text-right\">- {quote.title} / {quote.year} -</div>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <div className='history-box'>\r\n                <div className=\"history-date\">\r\n                    <Button variant=\"primary\" onClick={() => {\r\n                        setMovieChart([]);\r\n                        var newDate = new Date(startDate);\r\n                        newDate.setDate(newDate.getDate() - 1);\r\n                        setStartDate(newDate);\r\n                    }}>&lt;</Button>\r\n                    <DatePicker \r\n                        selected={startDate}\r\n                        onChange={(date) => {\r\n                            setStartDate(date);\r\n                        }}\r\n                        dateFormat=\"yyyy/MM/dd (EE)\"\r\n                        className='datepicker'\r\n                        style = {{width : '100%'}}/>\r\n                    <Button variant=\"primary\" onClick={() => {\r\n                        setMovieChart([]);\r\n                        if (startDate.getDate() >= new Date().getDate())\r\n                            alert('오늘입니다!');\r\n                        else {\r\n                            var newDate = new Date(startDate);\r\n                            newDate.setDate(newDate.getDate() + 1);\r\n                        }\r\n                        setStartDate(newDate);\r\n                    }}>&gt;</Button>\r\n                </div>\r\n                {\r\n                    loading\r\n                    ?  <LinearProgress />\r\n                    : null\r\n                }\r\n                <Moviehistory2 movies={movieChart}/>\r\n                \r\n            </div>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Calendar() {\r\n\r\n}\r\n\r\nfunction Moviehistory2(props) {\r\n    return (\r\n        <div className='container'>\r\n            <Row>\r\n            {\r\n                props.movies.map((movie, i) => {\r\n                    return (\r\n                        <Moviecard movie={movie} key={i}/>\r\n                    )\r\n                    \r\n                })\r\n            }\r\n            </Row>\r\n            <div style={{clear : 'both'}}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Moviecard(props) {\r\n\r\n    var [movieDetail, setMovieDetail] = useState({});\r\n\r\n    useEffect(() => {\r\n        axios.get('/public/moviedetail', {\r\n            params : {\r\n                code : props.movie.movieCd,\r\n            }\r\n        })\r\n        .then(res => {\r\n            setMovieDetail(res.data);\r\n        })\r\n    }, [])\r\n\r\n    function directors(dir) {\r\n        if (dir == null)\r\n            return ''; \r\n        else if (dir.length > 1)\r\n            return dir[0].peopleNm + ' 외 ' + (dir.length - 1) + ' 명';\r\n        else \r\n            return dir[0].peopleNm;\r\n    }\r\n\r\n    function rankChange(rank) {\r\n        if(rank > 0) {\r\n            return ['▲ ' + rank, 'text-danger history-updown']\r\n        }\r\n        else if (rank < 0) {\r\n            return ['▼ ' + String(rank * -1), 'text-primary history-updown'];\r\n        }\r\n        else {\r\n            return ['-', 'history-updown'];\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Col xs={6} className='poster'>\r\n            \r\n            <Accordion>\r\n                <Accordion.Item eventKey=\"0\">\r\n                    <Accordion.Header >\r\n                        <div className=\"history-rank text-center\">\r\n                            <div className=\"h4\">{props.movie.rank}</div>\r\n                            <div className={rankChange(props.movie.rankInten)[1]}>{rankChange(props.movie.rankInten)[0]}</div>\r\n                        </div>\r\n                        <div className='history-title'>{props.movie.movieNm}</div>\r\n                        {\r\n                            props.movie.rankOldAndNew === 'NEW'\r\n                            ? <div className='text-danger history-new' style={{fontWeight : 'bolder', fontSize : '15px'}}>{props.movie.rankOldAndNew}</div>\r\n                            : null\r\n                        }\r\n                        \r\n                        \r\n                    </Accordion.Header>\r\n                    <Accordion.Body className='history-detail'>\r\n                        <Table responsive=\"sm\">\r\n                            <tr>\r\n                                <th>개봉일</th>\r\n                                <th>{props.movie.openDt}</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>총 관객수</th>\r\n                                <th>{parseInt(props.movie.audiAcc).toLocaleString('en-US')} 명</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>감독</th>\r\n                                <th>{directors(movieDetail.directors)}</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>런타임</th>\r\n                                <th>{movieDetail.showTm} 분</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Table heading</th>\r\n                            </tr>\r\n                        </ Table>\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n            </Accordion>\r\n        </Col>\r\n    )\r\n}\r\n\r\n\r\nfunction Moviehistory(props) {\r\n\r\n    function rankChange(rank) {\r\n        if(rank > 0) {\r\n            return ['▲ ' + rank, 'text-danger']\r\n        }\r\n        else if (rank < 0) {\r\n            return ['▼ ' + String(rank * -1), 'text-primary'];\r\n        }\r\n        else {\r\n            return ['-', ''];\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container '>\r\n            <ListGroup as=\"ol\">\r\n                {\r\n                    props.movies.map((movie, i) => {\r\n                        return (\r\n                            <ListGroup.Item as=\"li\" key={i} className='history-comp'>\r\n                                <Row>\r\n                                    <Col xs={1} className='history-rank'>\r\n                                        <div className=\"h4\">{movie.rank}</div>\r\n                                        <div className={rankChange(movie.rankInten)[1]}>{rankChange(movie.rankInten)[0]}</div>\r\n                                        {\r\n                                            movie.rankOldAndNew === 'NEW'\r\n                                            ? <div className='text-danger' style={{fontWeight : 'bolder', fontSize : '15px'}}>{movie.rankOldAndNew}</div>\r\n                                            : null\r\n                                        }\r\n                                    </Col>\r\n                                    <Col xs={11} className='history-content'>\r\n                                        <div>\r\n                                            <div className='h4'>{movie.movieNm}</div>\r\n                                            <div>{movie.openDt} 개봉</div>\r\n                                            <div>일 관객수 | {movie.audiCnt} 명</div>\r\n                                            <div>총 관객수 | {movie.audiAcc} 명</div>\r\n                                        </div>\r\n                                        <div>\r\n                                            {movie.watchGradeNm}\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </ListGroup.Item>\r\n                        )\r\n                    })\r\n                }\r\n            </ListGroup>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","C:\\Users\\psu84\\movidic\\movie_react\\src\\fbase.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":2,"column":17,"nodeType":"71","messageId":"72","endLine":2,"endColumn":26},{"ruleId":"69","severity":1,"message":"73","line":4,"column":8,"nodeType":"71","messageId":"72","endLine":4,"endColumn":13},{"ruleId":"69","severity":1,"message":"74","line":18,"column":7,"nodeType":"71","messageId":"72","endLine":18,"endColumn":15},{"ruleId":"75","severity":1,"message":"76","line":31,"column":8,"nodeType":"77","endLine":31,"endColumn":90},{"ruleId":"75","severity":1,"message":"76","line":165,"column":81,"nodeType":"77","endLine":165,"endColumn":186},{"ruleId":"69","severity":1,"message":"78","line":1,"column":16,"nodeType":"71","messageId":"72","endLine":1,"endColumn":30},{"ruleId":"69","severity":1,"message":"79","line":1,"column":32,"nodeType":"71","messageId":"72","endLine":1,"endColumn":40},{"ruleId":"69","severity":1,"message":"80","line":2,"column":17,"nodeType":"71","messageId":"72","endLine":2,"endColumn":27},{"ruleId":"69","severity":1,"message":"81","line":12,"column":13,"nodeType":"71","messageId":"72","endLine":12,"endColumn":24},{"ruleId":"75","severity":1,"message":"76","line":40,"column":17,"nodeType":"77","endLine":40,"endColumn":122},{"ruleId":"75","severity":1,"message":"76","line":42,"column":17,"nodeType":"77","endLine":42,"endColumn":121},{"ruleId":"69","severity":1,"message":"82","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":9},{"ruleId":"69","severity":1,"message":"83","line":15,"column":17,"nodeType":"71","messageId":"72","endLine":15,"endColumn":29},{"ruleId":"69","severity":1,"message":"84","line":26,"column":10,"nodeType":"71","messageId":"72","endLine":26,"endColumn":23},{"ruleId":"69","severity":1,"message":"85","line":26,"column":25,"nodeType":"71","messageId":"72","endLine":26,"endColumn":41},{"ruleId":"69","severity":1,"message":"86","line":27,"column":10,"nodeType":"71","messageId":"72","endLine":27,"endColumn":24},{"ruleId":"69","severity":1,"message":"87","line":27,"column":26,"nodeType":"71","messageId":"72","endLine":27,"endColumn":43},{"ruleId":"69","severity":1,"message":"88","line":32,"column":10,"nodeType":"71","messageId":"72","endLine":32,"endColumn":15},{"ruleId":"69","severity":1,"message":"89","line":32,"column":17,"nodeType":"71","messageId":"72","endLine":32,"endColumn":25},{"ruleId":"69","severity":1,"message":"90","line":202,"column":24,"nodeType":"71","messageId":"72","endLine":202,"endColumn":43},{"ruleId":"91","severity":1,"message":"92","line":220,"column":8,"nodeType":"93","endLine":220,"endColumn":14,"suggestions":"94"},{"ruleId":"75","severity":1,"message":"76","line":292,"column":25,"nodeType":"77","endLine":292,"endColumn":88},{"ruleId":"95","severity":1,"message":"96","line":305,"column":71,"nodeType":"77","messageId":"97","endLine":305,"endColumn":119,"fix":"98"},{"ruleId":"69","severity":1,"message":"99","line":1,"column":18,"nodeType":"71","messageId":"72","endLine":1,"endColumn":22},{"ruleId":"69","severity":1,"message":"100","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":16},{"ruleId":"69","severity":1,"message":"101","line":46,"column":17,"nodeType":"71","messageId":"72","endLine":46,"endColumn":22},{"ruleId":"69","severity":1,"message":"102","line":105,"column":10,"nodeType":"71","messageId":"72","endLine":105,"endColumn":18},{"ruleId":"91","severity":1,"message":"103","line":140,"column":8,"nodeType":"93","endLine":140,"endColumn":10,"suggestions":"104"},{"ruleId":"69","severity":1,"message":"105","line":213,"column":10,"nodeType":"71","messageId":"72","endLine":213,"endColumn":22},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'userInfo' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'useHistory' is defined but never used.","'page_change' is assigned a value but never used.","'$' is defined but never used.","'genre_change' is assigned a value but never used.","'date_selected' is assigned a value but never used.","'setDate_selected' is assigned a value but never used.","'genre_selected' is assigned a value but never used.","'setGenre_selected' is assigned a value but never used.","'items' is assigned a value but never used.","'setItems' is assigned a value but never used.","'searchResult_change' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchResult.length'. Either include it or remove the dependency array.","ArrayExpression",["108"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"109","text":"110"},"'Card' is defined but never used.","'ReactDOM' is defined but never used.","'timer' is assigned a value but never used.","'Calendar' is defined but never used.","React Hook useEffect has a missing dependency: 'props.movie.movieCd'. Either include it or remove the dependency array.",["111"],"'Moviehistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},[13988,13988]," rel=\"noreferrer\"",{"desc":"114","fix":"115"},"Update the dependencies array to be: [page, searchResult.length]",{"range":"116","text":"117"},"Update the dependencies array to be: [props.movie.movieCd]",{"range":"118","text":"119"},[10286,10292],"[page, searchResult.length]",[4463,4465],"[props.movie.movieCd]"]