[{"C:\\Users\\psu84\\movidic\\movie_react\\src\\index.js":"1","C:\\Users\\psu84\\movidic\\movie_react\\src\\reportWebVitals.js":"2","C:\\Users\\psu84\\movidic\\movie_react\\src\\App.js":"3","C:\\Users\\psu84\\movidic\\movie_react\\src\\main.js":"4","C:\\Users\\psu84\\movidic\\movie_react\\src\\search.js":"5","C:\\Users\\psu84\\movidic\\movie_react\\src\\history.js":"6","C:\\Users\\psu84\\movidic\\movie_react\\src\\fbase.js":"7","C:\\Users\\psu84\\movidic\\movie_react\\src\\myPage.js":"8"},{"size":592,"mtime":1633623222965,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":6460,"mtime":1639412788397,"results":"12","hashOfConfig":"10"},{"size":6404,"mtime":1639412004441,"results":"13","hashOfConfig":"10"},{"size":20515,"mtime":1639598206654,"results":"14","hashOfConfig":"10"},{"size":9589,"mtime":1636882277881,"results":"15","hashOfConfig":"10"},{"size":601,"mtime":1636354201519,"results":"16","hashOfConfig":"10"},{"size":3376,"mtime":1639411562225,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"bn6edh",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"C:\\Users\\psu84\\movidic\\movie_react\\src\\index.js",[],["39","40"],"C:\\Users\\psu84\\movidic\\movie_react\\src\\reportWebVitals.js",[],"C:\\Users\\psu84\\movidic\\movie_react\\src\\App.js",["41","42","43","44","45"],"import { Navbar, Container, Nav, Modal, Button, Form} from 'react-bootstrap';\nimport React, { useEffect, useState } from 'react'\nimport { BrowserRouter, Route, Switch, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\nimport whale from './img/whale.png';\nimport google from './img/google.png';\n\nimport Boxoffice from './main.js';\nimport Search from './search.js';\nimport History from './history.js';\nimport MyPage from './myPage.js';\nimport { authService, firebaseInstance } from './fbase';\n\n\nfunction App() {\n\n\tvar [loginModal, setLoginModal] = useState(false);\n\tvar [loginState, setLoginState] = useState(localStorage.getItem('isLogin') ? true : false);\n\tvar [userInfo, setUserInfo] = useState(localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : {});\n\n\tlet history = useHistory();\n\n\tconst onLogOutClick = () => {\n\t\tauthService.signOut();\n\t\tlocalStorage.removeItem('isLogin');\n\t\tlocalStorage.removeItem('userInfo');\n\t\tlocalStorage.removeItem('liked');\n\t\tsetLoginState(false);\n\t\tsetUserInfo({});\n\t\thistory.push('/');\n\t}\n\n\tuseEffect(() => {\n\t\tif (userInfo != {}) {\n\t\t\taxios.get('/public/createUserLike', {\n\t\t\t\tparams : {\n\t\t\t\t\temail : userInfo.email,\n\t\t\t\t}\n\t\t\t}).then( result => {\n\t\t\t\tlocalStorage.setItem('liked', result.data.liked);\n\t\t\t})\n\t\t}\n    }, [userInfo]);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Navbar bg=\"dark\" variant=\"dark\" className=\"navbar\">\n\t\t\t\t<Container className='text-center'>\n\t\t\t\t\t\t<Navbar.Brand href=\"/\">\n\t\t\t\t\t\t\t<img src={whale} style={{width: '40px', height : '40px', marginRight : '10px'}} />\n\t\t\t\t\t\t\t<span>MOVIDIC</span>\n\t\t\t\t\t\t</Navbar.Brand>\n\t\t\t\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\n\t\t\t\t\t\t\t<Nav className=\"me-auto\">\n\t\t\t\t\t\t\t\t<Nav.Link href=\"/search\">SEARCH</Nav.Link>\n\t\t\t\t\t\t\t\t<Nav.Link href=\"/history\">HISTORY</Nav.Link>\n\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t\t<Nav>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tloginState\n\t\t\t\t\t\t\t\t\t? <>\n\t\t\t\t\t\t\t\t\t\t<Nav.Link href=\"/my\">MY</Nav.Link>\n\t\t\t\t\t\t\t\t\t\t<p className='loginUser'>{userInfo.firstName + userInfo.lastName + ' 님 환영합니다.'}</p>\n\t\t\t\t\t\t\t\t\t\t<button className='btn btn-primary' onClick={() => {onLogOutClick(); alert('로그아웃 되었습니다.');}}>LOGOUT</button>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t: <button className='btn btn-primary' onClick={() => {setLoginModal(true)}}>LOGIN</button>\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t</Nav>\n\n\t\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t\t\t\n\t\t\t\t</Container>\n\t\t\t</Navbar>\n\n\t\t\t\n\t\t\t< Login show = {loginModal} onHide={() => setLoginModal(false)} setLoginState={setLoginState} userInfo = {userInfo} setUserInfo={setUserInfo}/>\n\t\t\t\n\t\t\t<BrowserRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path={\"/\"} component={Boxoffice} />\n\t\t\t\t\t<Route exact path={\"/search\"} component={Search} />\n\t\t\t\t\t<Route exact path={\"/history\"} component={History} />\n\t\t\t\t\t<Route exact path={\"/my\"} component={MyPage} />\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\n\t\t</div>\n\t);\n}\n\nfunction Login(props) {\n\n\tvar [email, setEmail] = useState('');\n\tvar [password, setPassword] = useState('');\n\tvar [firstName, setFirstName] = useState('');\n\tvar [lastName, setLastName] = useState('');\n\tvar [newAcc, setNewAcc] = useState(true);\n\n\tconst onChange = (e) => {\n\t\tconst {target : {name, value}} = e;\n\t\tif (name === 'email'){\n\t\t\tsetEmail(value)\n\t\t} else if (name === 'password') {\n\t\t\tsetPassword(value);\n\t\t} else if (name === 'firstName') {\n\t\t\tsetFirstName(value);\n\t\t} else if (name === 'lastName') {\n\t\t\tsetLastName(value);\n\t\t}\n\t}\n\n\tconst onSubmit = async (e) => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tlet data;\n\t\t\tlet userData;\n\n\t\t\tif (newAcc) {\n\t\t\t\t// login\n\t\t\t\tdata = await authService.signInWithEmailAndPassword(email, password);\n\t\t\t\t\n\t\t\t  } else {\n\t\t\t\t// create account\n\t\t\t\tdata = await authService.createUserWithEmailAndPassword(email, password);\n\t\t\t\tuserData = {\n\t\t\t\t\tfirstName : firstName,\n\t\t\t\t\tlastName : lastName,\n\t\t\t\t\temail : email,\n\t\t\t\t}\n\t\t\t  }\n\t\t\t  \n\n\t\t\t\n\t\t\t// props.setUserInfo(userData);\n\t\t\tsetFirstName('');\n\t\t\tsetLastName('');\n\t\t\tsetEmail('');\n\t\t\tsetPassword('');\n\t\t\tprops.onHide(false);\t\n\t\t\tprops.setLoginState(true);\n\t\t\tlocalStorage.setItem('userInfo', JSON.stringify(userData));\n\t\t\tlocalStorage.setItem('isLogin', true);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\talert('유효한 사용자가 없습니다.');\n\t\t}\n\t}\n\n\tconst onGoogleClick = async (event) => {\n\t\tconst {target: {name}} = event;\n\t\tlet provider;\n\t\t\n\t\tif (name === 'google') {\n\t\t  provider = new firebaseInstance.auth.GoogleAuthProvider();\n\t\t}\n\t\tconst data = await authService.signInWithPopup(provider);\n\t\tconst userData = {\n\t\t\tfirstName : data.additionalUserInfo.profile.family_name,\n\t\t\tlastName : data.additionalUserInfo.profile.given_name,\n\t\t\temail : data.additionalUserInfo.profile.email,\n\t\t}\n\n\t\tprops.setUserInfo(userData);\n\t\tprops.onHide(false);\n\t\tprops.setLoginState(true);\n\t\tlocalStorage.setItem('userInfo', JSON.stringify(userData));\n\t\tlocalStorage.setItem('isLogin', true);\n\t}\n\t\n\tconst toggleAccount = () => setNewAcc((prev) => !prev);\n\t\n\treturn (\n\t\t<Modal\n\t\tshow = {props.show}\n\t\tonHide = {props.onHide}\n\t\tclassName='login-modal'\n\t\tsize=\"lg\"\n\t\taria-labelledby=\"contained-modal-title-vcenter\"\n\t\tcentered\n\t\t>\n\t\t\t<Modal.Header >\n\t\t\t\t<Modal.Title id=\"contained-modal-title-vcenter\">Login</Modal.Title>\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Body>\n\t\t\t\t<form onSubmit={onSubmit}>\n\t\t\t\t\t{\n\t\t\t\t\t\t!newAcc\n\t\t\t\t\t\t? <span><input className='login-input' name=\"firstName\" type=\"text\" placeholder=\"First Name\" required value={firstName} onChange={onChange}/>\n\t\t\t\t\t\t<input className='login-input' name=\"lastName\" type=\"text\" placeholder=\"Last Name\" required value={lastName} onChange={onChange}/></span>\n\t\t\t\t\t\t: \tnull\n\t\t\t\t\t}\n\t\t\t\t\t<input className='login-input' name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange}/>\n\t\t\t\t\t<input className='login-input' name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange}/>\n\t\t\t\t\t\n\t\t\t\t\t<input  className={ newAcc ? 'btn btn-primary' : 'btn btn-success' } type=\"submit\" value={ newAcc ? \"Login\" : \"Create Account\" } />\n\t\t\t\t</form>\n\t\t\t</Modal.Body>\n\t\t\t<Modal.Footer>\n\t\t\t\t<button name=\"google\" className='btn btn-secondary' onClick={onGoogleClick}><img src={google} style={{width: '20px', height : '20px', marginBottom : '5px', marginRight : '10px'}} />Login with Google</button>\n\t\t\t\t<button className={ newAcc ? 'btn btn-success' : 'btn btn-primary' } onClick={toggleAccount}>{newAcc ? \"Create New Account\" : \"Login\"}</button>\n\t\t\t\t<Button onClick={props.onHide}>Close</Button>\n\t\t\t</Modal.Footer>\n\t\t</Modal>\n\t)\n}\n\n\n\nexport default App;\n","C:\\Users\\psu84\\movidic\\movie_react\\src\\main.js",["46","47","48","49","50","51","52","53","54","55"],"import { Card, DropdownButton, Dropdown, Form, Button } from 'react-bootstrap';\r\nimport React, { useHistory, useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport theater from './img/theater.png';\r\nimport search from './img/search.png';\r\nimport back_history from './img/back-history.jpg';\r\nimport back_search from './img/back-search.jpg';\r\n\r\n\r\nfunction Boxoffice({history}) {\r\n\r\n    var [top10, top10_change] = useState([]);\r\n\tvar [page, page_change] = useState(1);\r\n\tvar [slide, slide_change] = useState(0);\r\n    var [searchWord, setSearchWord] = useState('');\r\n\t\r\n\tuseEffect(() => {\r\n\r\n\t\ttry {\r\n\t\t\taxios.get(\"http://localhost:8080/public/top10\")\r\n\t\t\t.then(response => {\r\n\t\t\t\tvar json = response.data.result;\r\n\t\t\t\ttop10_change(json);\r\n\t\t\t})\r\n\r\n\t\t} catch {\r\n\t\t\t// 오류 발생시 실행\r\n\t\t}\r\n\t}, [page]);\r\n\r\n    const handlerSubmit = (e) => {\r\n        localStorage.setItem('searchWord', searchWord);\r\n        history.push('/search');\r\n    }\r\n\r\n    return (\r\n        <div className=\" mt-4 main-box\">\r\n            \r\n            <Form className='boxoffice-search' onSubmit={handlerSubmit}>\r\n                <img src={search} className = 'boxoffice-search-button'/>\r\n                <Form.Group className=\"boxoffice-search-input\">\r\n                    <Form.Control type=\"text\" placeholder=\"영화 검색\" onChange={ e => {\r\n                        setSearchWord(e.target.value);\r\n                    }}/>\r\n                </Form.Group>\r\n            </Form>\r\n\r\n            <h4 className=\"text-center h2\">\r\n                <img src={theater} style={{width: '40px', height : '40px', marginBottom : '5px', marginRight : '10px'}}/>\r\n                TODAY BOXOFFICE\r\n                <img src={theater} style={{width: '40px', height : '40px', marginBottom : '5px', marginLeft : '10px'}}/>\r\n            </h4>\r\n            <div className=\"boxoffice mt-3\" style={{transform : 'translateX(' + {slide} +'%))'}}>\r\n                <div>\r\n                    <div className={ slide === 1 ? \"boxoffice-view translate-50\" : \"boxoffice-view translate50\"} >\r\n                        <div className='boxoffice-cardset'>\r\n                            {\r\n                                top10.map((movie, i) => {\r\n                                    return (\r\n                                        <Card className=\"boxoffice-card\" key={i}>\r\n                                            <Card.Img variant=\"top\" className=\"boxoffice-img\" src={movie.posterUrl} />\r\n                                            <Card.Text className={'boxoffice-rank card-' + i}>{movie.id}</Card.Text>\r\n                                            {(() => {\r\n                                                    switch(movie.info[4]){\r\n                                                        case '전체 관람가' :\r\n                                                            return <Card.Text className='boxoffice-agebadge age-all'>ALL</Card.Text>\r\n                                                        case '12세 관람가' :\r\n                                                            return <Card.Text className='boxoffice-agebadge age-12'>12</Card.Text>\r\n                                                        case '15세 관람가' :\r\n                                                            return <Card.Text className='boxoffice-agebadge age-15'>15</Card.Text>\r\n                                                        case '청소년 관람불가' :\r\n                                                            return <Card.Text className='boxoffice-agebadge age-19'>19</Card.Text>\r\n                                                        default :\r\n                                                            return null;\r\n                                                    }\r\n                                            })()}\r\n                                            <Card.Body className=\"boxoffice-bg\">\r\n                                                <Card.Title className =\"mb-3\">\r\n                                                    <div className=\"boxoffice-title\">{movie.title}</div>\r\n                                                    <div className=\"boxoffice-subtitle\">{movie.subTitle}</div>\r\n                                                </Card.Title>\r\n                                                \r\n                                                \r\n                                                <Card.Text className='boxoffice-content'> {movie.info[0]}</Card.Text>\r\n                                                <Card.Text className='boxoffice-content'>{movie.info[2]}</Card.Text>\r\n                                                <Card.Text className='boxoffice-content'>평점⭐ : {movie.score}</Card.Text>\r\n                                                \r\n                                                \r\n                                                \r\n                                                <Card.Text className='boxoffice-content'>예매율  : <span className='boxoffice-rate'><span>{movie.rate}</span> %</span></Card.Text>\r\n\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='boxoffice-btn'>\r\n                    <button className=\"btn before\" onClick={() => {\r\n                        slide_change(0);\r\n                    }}>&lt;</button>\r\n                    <button className=\"btn next\"onClick={() => {\r\n                        slide_change(1);\r\n                    }}>&gt;</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"select-box mt-5\">\r\n                \r\n                <div>\r\n                    <img src={back_history} className='select-img'/>\r\n                    <div className=\"select-right h3\" style={{\"textAlign\" : \"left\"}} onClick={() => history.push('/history')}>🎬 HISTORY</div>\r\n                </div>\r\n                <div>\r\n                    <img src={back_search} className='select-img'/>\r\n                    <div className=\"select-left h3\" style={{\"textAlign\" : \"right\"}}>Continue... </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n        \r\n    )\r\n}\r\n\r\nexport default Boxoffice;","C:\\Users\\psu84\\movidic\\movie_react\\src\\search.js",["56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71"],"C:\\Users\\psu84\\movidic\\movie_react\\src\\history.js",["72","73","74","75","76"],"import { Button, Card, ListGroup, Row, Col, Accordion, Table} from 'react-bootstrap';\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport DatePicker from \"react-datepicker\";\r\nimport ReactDOM from 'react-dom';\r\nimport { LinearProgress } from '../node_modules/@mui/material';\r\n\r\nimport './History.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction App() {\r\n    \r\n    var [quote, setQuote] = useState({});\r\n    var [movieChart, setMovieChart] = useState([]);\r\n    var [startDate, setStartDate] = useState(new Date());\r\n    var [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        var quoteNum = Math.floor(Math.random() * 50) + 1;\r\n\r\n        axios.get('/public/quote', {\r\n            params : {\r\n                q : quoteNum,\r\n            }\r\n        }).then( result => {\r\n            setQuote(result.data);\r\n        })\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        setLoading(true);\r\n\r\n        var today = startDate;\r\n        var year = today.getFullYear();\r\n        var month = (today.getMonth() + 1) >= 10 ? (today.getMonth() + 1) : '0' + (today.getMonth() + 1);\r\n        var day = (today.getDate() - 1) >= 10 ? (today.getDate() - 1) : '0' + (today.getDate() - 1);\r\n        \r\n        axios.get('/public/history', {\r\n            params : {\r\n                date : parseInt(year + \"\" + month + \"\" + day),\r\n            }\r\n        })\r\n        .then(res => {\r\n            let timer = setTimeout(()=>{ \r\n                setLoading(false);\r\n                setMovieChart(res.data);\r\n            }, 500);\r\n            \r\n        })\r\n    }, [startDate])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className='top-box mt-5 mb-5'>\r\n                <div className='top-title h1'>MOVIE HISTORY</div>\r\n                <div className=''>\r\n                    <div className=\"quote-content font-italic \">\"{quote.text}\"</div>\r\n                    <div className=\"quote-info font-italic text-right\">- {quote.title} / {quote.year} -</div>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <div className='history-box'>\r\n                <div className=\"history-date\">\r\n                    <Button variant=\"primary\" onClick={() => {\r\n                        setMovieChart([]);\r\n                        var newDate = new Date(startDate);\r\n                        newDate.setDate(newDate.getDate() - 1);\r\n                        setStartDate(newDate);\r\n                    }}>&lt;</Button>\r\n                    <DatePicker \r\n                        selected={startDate}\r\n                        onChange={(date) => {\r\n                            setStartDate(date);\r\n                        }}\r\n                        dateFormat=\"yyyy/MM/dd (EE)\"\r\n                        className='datepicker'\r\n                        style = {{width : '100%'}}/>\r\n                    <Button variant=\"primary\" onClick={() => {\r\n                        setMovieChart([]);\r\n                        if (startDate.getDate() >= new Date().getDate())\r\n                            alert('오늘입니다!');\r\n                        else {\r\n                            var newDate = new Date(startDate);\r\n                            newDate.setDate(newDate.getDate() + 1);\r\n                        }\r\n                        setStartDate(newDate);\r\n                    }}>&gt;</Button>\r\n                </div>\r\n                {\r\n                    loading\r\n                    ?  <LinearProgress />\r\n                    : null\r\n                }\r\n                <Moviehistory2 movies={movieChart}/>\r\n                \r\n            </div>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Moviehistory2(props) {\r\n    return (\r\n        <div className='container'>\r\n            <Row>\r\n            {\r\n                props.movies.map((movie, i) => {\r\n                    return (\r\n                        <Moviecard movie={movie} key={i}/>\r\n                    )\r\n                    \r\n                })\r\n            }\r\n            </Row>\r\n            <div style={{clear : 'both'}}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Moviecard(props) {\r\n\r\n    var [movieDetail, setMovieDetail] = useState({});\r\n\r\n    useEffect(() => {\r\n        axios.get('/public/moviedetail', {\r\n            params : {\r\n                code : props.movie.movieCd,\r\n            }\r\n        })\r\n        .then(res => {\r\n            setMovieDetail(res.data);\r\n        })\r\n    }, [])\r\n\r\n    function directors(dir) {\r\n        if (dir == null)\r\n            return ''; \r\n        else if (dir.length > 1)\r\n            return dir[0].peopleNm + ' 외 ' + (dir.length - 1) + ' 명';\r\n        else \r\n            return dir[0].peopleNm;\r\n    }\r\n\r\n    function rankChange(rank) {\r\n        if(rank > 0) {\r\n            return ['▲ ' + rank, 'text-danger history-updown']\r\n        }\r\n        else if (rank < 0) {\r\n            return ['▼ ' + String(rank * -1), 'text-primary history-updown'];\r\n        }\r\n        else {\r\n            return ['-', 'history-updown'];\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Col xs={6} className='poster'>\r\n            \r\n            <Accordion>\r\n                <Accordion.Item eventKey=\"0\">\r\n                    <Accordion.Header >\r\n                        <div className=\"history-rank text-center\">\r\n                            <div className=\"h4\">{props.movie.rank}</div>\r\n                            <div className={rankChange(props.movie.rankInten)[1]}>{rankChange(props.movie.rankInten)[0]}</div>\r\n                        </div>\r\n                        <div className='history-title'>{props.movie.movieNm}</div>\r\n                        {\r\n                            props.movie.rankOldAndNew === 'NEW'\r\n                            ? <div className='text-danger history-new' style={{fontWeight : 'bolder', fontSize : '15px'}}>{props.movie.rankOldAndNew}</div>\r\n                            : null\r\n                        }\r\n                        \r\n                        \r\n                    </Accordion.Header>\r\n                    <Accordion.Body className='history-detail'>\r\n                        <Table responsive=\"sm\">\r\n                            <tr>\r\n                                <th>개봉일</th>\r\n                                <th>{props.movie.openDt}</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>총 관객수</th>\r\n                                <th>{parseInt(props.movie.audiAcc).toLocaleString('en-US')} 명</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>감독</th>\r\n                                <th>{directors(movieDetail.directors)}</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>런타임</th>\r\n                                <th>{movieDetail.showTm} 분</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Table heading</th>\r\n                            </tr>\r\n                        </ Table>\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n            </Accordion>\r\n        </Col>\r\n    )\r\n}\r\n\r\n\r\nfunction Moviehistory(props) {\r\n\r\n    function rankChange(rank) {\r\n        if(rank > 0) {\r\n            return ['▲ ' + rank, 'text-danger']\r\n        }\r\n        else if (rank < 0) {\r\n            return ['▼ ' + String(rank * -1), 'text-primary'];\r\n        }\r\n        else {\r\n            return ['-', ''];\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <ListGroup as=\"ol\">\r\n                {\r\n                    props.movies.map((movie, i) => {\r\n                        return (\r\n                            <ListGroup.Item as=\"li\" key={i} className='history-comp'>\r\n                                <Row>\r\n                                    <Col xs={1} className='history-rank'>\r\n                                        <div className=\"h4\">{movie.rank}</div>\r\n                                        <div className={rankChange(movie.rankInten)[1]}>{rankChange(movie.rankInten)[0]}</div>\r\n                                        {\r\n                                            movie.rankOldAndNew === 'NEW'\r\n                                            ? <div className='text-danger' style={{fontWeight : 'bolder', fontSize : '15px'}}>{movie.rankOldAndNew}</div>\r\n                                            : null\r\n                                        }\r\n                                    </Col>\r\n                                    <Col xs={11} className='history-content'>\r\n                                        <div>\r\n                                            <div className='h4'>{movie.movieNm}</div>\r\n                                            <div>{movie.openDt} 개봉</div>\r\n                                            <div>일 관객수 | {movie.audiCnt} 명</div>\r\n                                            <div>총 관객수 | {movie.audiAcc} 명</div>\r\n                                        </div>\r\n                                        <div>\r\n                                            {movie.watchGradeNm}\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </ListGroup.Item>\r\n                        )\r\n                    })\r\n                }\r\n            </ListGroup>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","C:\\Users\\psu84\\movidic\\movie_react\\src\\fbase.js",[],"C:\\Users\\psu84\\movidic\\movie_react\\src\\myPage.js",["77","78","79","80","81","82","83","84","85","86","87","88"],"import { Button, Card, ListGroup, Row, Col, Accordion, Table} from 'react-bootstrap';\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './MyPage.css';\r\nimport user from './img/user.png';\r\nimport no from './img/noimage.png';\r\n\r\nfunction App() {\r\n    \r\n    var [userInfo, setUserInfo] = useState(JSON.parse(localStorage.getItem('userInfo')));\r\n    var [likedMovie, setLikedMovie] = useState(JSON.parse(localStorage.getItem('liked')));\r\n\r\n    console.log(likedMovie)\r\n\r\n    \r\n    return (\r\n        <div className='container mypage-bg'>\r\n            <Row className=''>\r\n                <Col className='mt-5 mypage-userinfo'>\r\n                    <div className='mypage-userinfo-img'>\r\n                        <img src={user}/>\r\n                    </div>\r\n                    <div className='mypage-userinfo-info'>\r\n                        <p className='h2'>{userInfo.firstName + \" \" + userInfo.lastName}</p>\r\n                        <p>E-mail : {userInfo.email}</p>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <hr style={{width : \"90%\", margin : '30px auto'}}/>\r\n            <Row className=\"mypage-movie\">\r\n                <p className=\"h3 text-center\">😎 관심 작품 😎</p>\r\n                <Col className=\"mt-3 mypage-movie\">\r\n                    {\r\n                        likedMovie != {}\r\n                        ? <LikedMovie likedMovie={likedMovie}/>\r\n                        : <p className='no-result'>🙄 관심 작품이 없습니다!</p>\r\n                    }\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nfunction LikedMovie(props) {\r\n    \r\n    const [likeMovie, setLikedMovie] = useState(props.likedMovie);\r\n\r\n    console.log(likeMovie);\r\n    return (\r\n        <Row>\r\n            {\r\n                Object.values(likeMovie).map(function(source, i) {\r\n                    return (\r\n                    <Col className=\"mt-3 mb-2\" xs={6} md={4} lg={3} key={i}>\r\n                        <Card  className=\"searchResult_movie\">\r\n                            <div className=\"searchResult_img\" >\r\n                                <Card.Img variant=\"top\" src={ source.image === \"\" ? no : source.image } />\r\n                            </div>\r\n                            <Card.Body className=\"searchReuslt_content\">\r\n                                <Card.Title className=\"searchResult_title\">{source.title.split(/<b>|<\\/b>/g).join(\"\")}</Card.Title>\r\n                                <Card.Title className=\"searchResult_subtitle\">{source.subtitle.split(/<b>|<\\/b>/g).join(\"\")}</Card.Title>\r\n                                \r\n                                <Card.Text className=\"searchResult_info mt-4\">{source.director.split(\"|\").length > 2 ? source.director.split(\"|\")[0] + ' 외 ' + (source.director.split(\"|\").length - 2) + '명' : source.director.split(\"|\").slice(0, -1).join()} / {source.pubDate}</Card.Text>\r\n                                <Card.Text className=\"searchResult_info\">평점⭐ {source.userRating}</Card.Text>\r\n                            </Card.Body>\r\n                            <div className='cover'></div>\r\n                        </Card>\r\n                    </Col>\r\n                    )\r\n                })\r\n            }\r\n        </Row>\r\n        \r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default App;",{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":1,"column":49,"nodeType":"95","messageId":"96","endLine":1,"endColumn":53},{"ruleId":"97","severity":1,"message":"98","line":35,"column":16,"nodeType":"99","messageId":"100","endLine":35,"endColumn":18},{"ruleId":"101","severity":1,"message":"102","line":51,"column":8,"nodeType":"103","endLine":51,"endColumn":90},{"ruleId":"93","severity":1,"message":"104","line":126,"column":5,"nodeType":"95","messageId":"96","endLine":126,"endColumn":9},{"ruleId":"101","severity":1,"message":"102","line":201,"column":81,"nodeType":"103","endLine":201,"endColumn":186},{"ruleId":"93","severity":1,"message":"105","line":1,"column":16,"nodeType":"95","messageId":"96","endLine":1,"endColumn":30},{"ruleId":"93","severity":1,"message":"106","line":1,"column":32,"nodeType":"95","messageId":"96","endLine":1,"endColumn":40},{"ruleId":"93","severity":1,"message":"107","line":1,"column":48,"nodeType":"95","messageId":"96","endLine":1,"endColumn":54},{"ruleId":"93","severity":1,"message":"108","line":2,"column":17,"nodeType":"95","messageId":"96","endLine":2,"endColumn":27},{"ruleId":"93","severity":1,"message":"109","line":14,"column":13,"nodeType":"95","messageId":"96","endLine":14,"endColumn":24},{"ruleId":"101","severity":1,"message":"102","line":41,"column":17,"nodeType":"103","endLine":41,"endColumn":74},{"ruleId":"101","severity":1,"message":"102","line":50,"column":17,"nodeType":"103","endLine":50,"endColumn":122},{"ruleId":"101","severity":1,"message":"102","line":52,"column":17,"nodeType":"103","endLine":52,"endColumn":121},{"ruleId":"101","severity":1,"message":"102","line":114,"column":21,"nodeType":"103","endLine":114,"endColumn":69},{"ruleId":"101","severity":1,"message":"102","line":118,"column":21,"nodeType":"103","endLine":118,"endColumn":68},{"ruleId":"93","severity":1,"message":"110","line":5,"column":8,"nodeType":"95","messageId":"96","endLine":5,"endColumn":9},{"ruleId":"93","severity":1,"message":"111","line":15,"column":19,"nodeType":"95","messageId":"96","endLine":15,"endColumn":31},{"ruleId":"93","severity":1,"message":"112","line":30,"column":12,"nodeType":"95","messageId":"96","endLine":30,"endColumn":21},{"ruleId":"93","severity":1,"message":"113","line":30,"column":23,"nodeType":"95","messageId":"96","endLine":30,"endColumn":35},{"ruleId":"93","severity":1,"message":"114","line":31,"column":12,"nodeType":"95","messageId":"96","endLine":31,"endColumn":17},{"ruleId":"93","severity":1,"message":"115","line":31,"column":19,"nodeType":"95","messageId":"96","endLine":31,"endColumn":27},{"ruleId":"93","severity":1,"message":"116","line":33,"column":26,"nodeType":"95","messageId":"96","endLine":33,"endColumn":41},{"ruleId":"117","severity":1,"message":"118","line":50,"column":8,"nodeType":"119","endLine":50,"endColumn":10,"suggestions":"120"},{"ruleId":"97","severity":1,"message":"121","line":53,"column":26,"nodeType":"99","messageId":"100","endLine":53,"endColumn":28},{"ruleId":"117","severity":1,"message":"122","line":238,"column":8,"nodeType":"119","endLine":238,"endColumn":14,"suggestions":"123"},{"ruleId":"117","severity":1,"message":"124","line":243,"column":7,"nodeType":"119","endLine":243,"endColumn":21,"suggestions":"125"},{"ruleId":"93","severity":1,"message":"126","line":305,"column":22,"nodeType":"95","messageId":"96","endLine":305,"endColumn":33},{"ruleId":"117","severity":1,"message":"127","line":319,"column":8,"nodeType":"119","endLine":319,"endColumn":10,"suggestions":"128"},{"ruleId":"117","severity":1,"message":"129","line":331,"column":8,"nodeType":"119","endLine":331,"endColumn":14,"suggestions":"130"},{"ruleId":"101","severity":1,"message":"102","line":351,"column":25,"nodeType":"103","endLine":351,"endColumn":88},{"ruleId":"131","severity":1,"message":"132","line":364,"column":71,"nodeType":"103","messageId":"133","endLine":364,"endColumn":119,"fix":"134"},{"ruleId":"93","severity":1,"message":"135","line":1,"column":18,"nodeType":"95","messageId":"96","endLine":1,"endColumn":22},{"ruleId":"93","severity":1,"message":"136","line":5,"column":8,"nodeType":"95","messageId":"96","endLine":5,"endColumn":16},{"ruleId":"93","severity":1,"message":"137","line":46,"column":17,"nodeType":"95","messageId":"96","endLine":46,"endColumn":22},{"ruleId":"117","severity":1,"message":"138","line":136,"column":8,"nodeType":"119","endLine":136,"endColumn":10,"suggestions":"139"},{"ruleId":"93","severity":1,"message":"140","line":209,"column":10,"nodeType":"95","messageId":"96","endLine":209,"endColumn":22},{"ruleId":"93","severity":1,"message":"107","line":1,"column":10,"nodeType":"95","messageId":"96","endLine":1,"endColumn":16},{"ruleId":"93","severity":1,"message":"141","line":1,"column":24,"nodeType":"95","messageId":"96","endLine":1,"endColumn":33},{"ruleId":"93","severity":1,"message":"142","line":1,"column":45,"nodeType":"95","messageId":"96","endLine":1,"endColumn":54},{"ruleId":"93","severity":1,"message":"143","line":1,"column":56,"nodeType":"95","messageId":"96","endLine":1,"endColumn":61},{"ruleId":"93","severity":1,"message":"144","line":2,"column":17,"nodeType":"95","messageId":"96","endLine":2,"endColumn":26},{"ruleId":"93","severity":1,"message":"145","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":13},{"ruleId":"93","severity":1,"message":"136","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":16},{"ruleId":"93","severity":1,"message":"126","line":12,"column":20,"nodeType":"95","messageId":"96","endLine":12,"endColumn":31},{"ruleId":"93","severity":1,"message":"146","line":13,"column":22,"nodeType":"95","messageId":"96","endLine":13,"endColumn":35},{"ruleId":"101","severity":1,"message":"102","line":23,"column":25,"nodeType":"103","endLine":23,"endColumn":42},{"ruleId":"97","severity":1,"message":"98","line":36,"column":36,"nodeType":"99","messageId":"100","endLine":36,"endColumn":38},{"ruleId":"93","severity":1,"message":"146","line":50,"column":23,"nodeType":"95","messageId":"96","endLine":50,"endColumn":36},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'data' is assigned a value but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'Button' is defined but never used.","'useHistory' is defined but never used.","'page_change' is assigned a value but never used.","'$' is defined but never used.","'genre_change' is assigned a value but never used.","'sortPoint' is assigned a value but never used.","'setSortPoint' is assigned a value but never used.","'items' is assigned a value but never used.","'setItems' is assigned a value but never used.","'setSearchInMain' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handlerSubmit' and 'searchInMain'. Either include them or remove the dependency array.","ArrayExpression",["149"],"Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'searchResult.length'. Either include it or remove the dependency array.",["150"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["151"],"'setUserInfo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.modalData.link'. Either include it or remove the dependency array.",["152"],"React Hook useEffect has missing dependencies: 'likedList' and 'userInfo'. Either include them or remove the dependency array.",["153"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"154","text":"155"},"'Card' is defined but never used.","'ReactDOM' is defined but never used.","'timer' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.movie.movieCd'. Either include it or remove the dependency array.",["156"],"'Moviehistory' is defined but never used.","'ListGroup' is defined but never used.","'Accordion' is defined but never used.","'Table' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'setLikedMovie' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},[16692,16692]," rel=\"noreferrer\"",{"desc":"167","fix":"168"},"Update the dependencies array to be: [handlerSubmit, searchInMain]",{"range":"169","text":"170"},"Update the dependencies array to be: [page, searchResult.length]",{"range":"171","text":"172"},"Update the dependencies array to be: [props, searchResult]",{"range":"173","text":"174"},"Update the dependencies array to be: [props.modalData.link]",{"range":"175","text":"176"},"Update the dependencies array to be: [like, likedList, userInfo]",{"range":"177","text":"178"},"Update the dependencies array to be: [props.movie.movieCd]",{"range":"179","text":"180"},[2026,2028],"[handlerSubmit, searchInMain]",[11102,11108],"[page, searchResult.length]",[11247,11261],"[props, searchResult]",[14445,14447],"[props.modalData.link]",[14789,14795],"[like, likedList, userInfo]",[4437,4439],"[props.movie.movieCd]"]