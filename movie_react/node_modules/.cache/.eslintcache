[{"C:\\Users\\psu84\\movidic\\movie_react\\src\\index.js":"1","C:\\Users\\psu84\\movidic\\movie_react\\src\\reportWebVitals.js":"2","C:\\Users\\psu84\\movidic\\movie_react\\src\\App.js":"3","C:\\Users\\psu84\\movidic\\movie_react\\src\\main.js":"4","C:\\Users\\psu84\\movidic\\movie_react\\src\\search.js":"5","C:\\Users\\psu84\\movidic\\movie_react\\src\\history.js":"6","C:\\Users\\psu84\\movidic\\movie_react\\src\\fbase.js":"7","C:\\Users\\psu84\\movidic\\movie_react\\src\\myPage.js":"8"},{"size":592,"mtime":1633623222965,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":6272,"mtime":1636966242296,"results":"12","hashOfConfig":"10"},{"size":6716,"mtime":1636918923246,"results":"13","hashOfConfig":"10"},{"size":18207,"mtime":1636965573561,"results":"14","hashOfConfig":"10"},{"size":9589,"mtime":1636882277881,"results":"15","hashOfConfig":"10"},{"size":601,"mtime":1636354201519,"results":"16","hashOfConfig":"10"},{"size":3048,"mtime":1636964492404,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"bn6edh",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"C:\\Users\\psu84\\movidic\\movie_react\\src\\index.js",[],["39","40"],"C:\\Users\\psu84\\movidic\\movie_react\\src\\reportWebVitals.js",[],"C:\\Users\\psu84\\movidic\\movie_react\\src\\App.js",["41","42","43","44","45","46"],"C:\\Users\\psu84\\movidic\\movie_react\\src\\main.js",["47","48","49","50","51","52","53","54","55","56"],"import { Card, DropdownButton, Dropdown, Form, Button } from 'react-bootstrap';\r\nimport React, { useHistory, useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport theater from './img/theater.png';\r\nimport search from './img/search.png';\r\nimport back_history from './img/back-history.jpg';\r\nimport back_search from './img/back-search.jpg';\r\n\r\n\r\nfunction Boxoffice({history}) {\r\n\r\n    var [top10, top10_change] = useState([]);\r\n\tvar [page, page_change] = useState(1);\r\n\tvar [slide, slide_change] = useState(0);\r\n    var [searchWord, setSearchWord] = useState('');\r\n\r\n\t// const getHtml = async() => {\r\n\t// \ttry {\r\n\t// \t\treturn await axios.get('https://movie.naver.com/movie/running/current.naver');\r\n\t// \t} catch (err){\r\n\t// \t\tconsole.log(err);\r\n\t// \t}\r\n\t// }\r\n\t\r\n\tuseEffect(() => {\r\n\r\n\t\ttry {\r\n\t\t\taxios.get(\"http://localhost:8080/public/top10\")\r\n\t\t\t.then(response => {\r\n\t\t\t\tvar json = response.data.result;\r\n\t\t\t\ttop10_change(json);\r\n\t\t\t\t// console.log(json);\r\n\t\t\t})\r\n\r\n\t\t} catch {\r\n\t\t\t// Ïò§Î•ò Î∞úÏÉùÏãú Ïã§Ìñâ\r\n\t\t}\r\n\t}, [page]);\r\n\r\n    const handlerSubmit = (e) => {\r\n        localStorage.setItem('searchWord', searchWord);\r\n        history.push('/search');\r\n    }\r\n\r\n    return (\r\n        <div className=\" mt-4 main-box\">\r\n            \r\n            <Form className='boxoffice-search' onSubmit={handlerSubmit}>\r\n                <img src={search} className = 'boxoffice-search-button'/>\r\n                {/* <div className= 'boxoffice-search-button text-center'>üîé</div> */}\r\n                <Form.Group className=\"boxoffice-search-input\">\r\n                    <Form.Control type=\"text\" placeholder=\"ÏòÅÌôî Í≤ÄÏÉâ\" onChange={ e => {\r\n                        setSearchWord(e.target.value);\r\n                    }}/>\r\n                </Form.Group>\r\n            </Form>\r\n\r\n            <h4 className=\"text-center h2\">\r\n                <img src={theater} style={{width: '40px', height : '40px', marginBottom : '5px', marginRight : '10px'}}/>\r\n                TODAY BOXOFFICE\r\n                <img src={theater} style={{width: '40px', height : '40px', marginBottom : '5px', marginLeft : '10px'}}/>\r\n            </h4>\r\n            <div className=\"boxoffice mt-3\" style={{transform : 'translateX(' + {slide} +'%))'}}>\r\n                <div>\r\n                    <div className={ slide === 1 ? \"boxoffice-view translate-50\" : \"boxoffice-view translate50\"} >\r\n                        <div className='boxoffice-cardset'>\r\n                            {\r\n                                top10.map((movie, i) => {\r\n                                    return (\r\n                                        <Card className=\"boxoffice-card\" key={i}>\r\n                                            <Card.Img variant=\"top\" className=\"boxoffice-img\" src={movie.posterUrl} />\r\n                                            <Card.Text className={'boxoffice-rank card-' + i}>{movie.id}</Card.Text>\r\n                                            {(() => {\r\n                                                    switch(movie.info[4]){\r\n                                                        case 'Ï†ÑÏ≤¥ Í¥ÄÎûåÍ∞Ä' :\r\n                                                            return <Card.Text className='boxoffice-agebadge age-all'>ALL</Card.Text>\r\n                                                        case '12ÏÑ∏ Í¥ÄÎûåÍ∞Ä' :\r\n                                                            return <Card.Text className='boxoffice-agebadge age-12'>12</Card.Text>\r\n                                                        case '15ÏÑ∏ Í¥ÄÎûåÍ∞Ä' :\r\n                                                            return <Card.Text className='boxoffice-agebadge age-15'>15</Card.Text>\r\n                                                        case 'Ï≤≠ÏÜåÎÖÑ Í¥ÄÎûåÎ∂àÍ∞Ä' :\r\n                                                            return <Card.Text className='boxoffice-agebadge age-19'>19</Card.Text>\r\n                                                        default :\r\n                                                            return null;\r\n                                                    }\r\n                                            })()}\r\n                                            <Card.Body className=\"boxoffice-bg\">\r\n                                                <Card.Title className =\"mb-3\">\r\n                                                    <div className=\"boxoffice-title\">{movie.title}</div>\r\n                                                    <div className=\"boxoffice-subtitle\">{movie.subTitle}</div>\r\n                                                </Card.Title>\r\n                                                \r\n                                                \r\n                                                <Card.Text className='boxoffice-content'> {movie.info[0]}</Card.Text>\r\n                                                <Card.Text className='boxoffice-content'>{movie.info[2]}</Card.Text>\r\n                                                <Card.Text className='boxoffice-content'>ÌèâÏ†ê‚≠ê : {movie.score}</Card.Text>\r\n                                                \r\n                                                \r\n                                                \r\n                                                <Card.Text className='boxoffice-content'>ÏòàÎß§Ïú®  : <span className='boxoffice-rate'><span>{movie.rate}</span> %</span></Card.Text>\r\n\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='boxoffice-btn'>\r\n                    <button className=\"btn before\" onClick={() => {\r\n                        slide_change(0);\r\n                    }}>&lt;</button>\r\n                    <button className=\"btn next\"onClick={() => {\r\n                        slide_change(1);\r\n                    }}>&gt;</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"select-box mt-5\">\r\n                \r\n                <div>\r\n                    <img src={back_history} className='select-img'/>\r\n                    <div className=\"select-right h3\" style={{\"textAlign\" : \"left\"}} onClick={() => history.push('/history')}>üé¨ HISTORY</div>\r\n                </div>\r\n                <div>\r\n                    <img src={back_search} className='select-img'/>\r\n                    <div className=\"select-left h3\" style={{\"textAlign\" : \"right\"}}>Continue... </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n        \r\n    )\r\n}\r\n\r\nexport default Boxoffice;","C:\\Users\\psu84\\movidic\\movie_react\\src\\search.js",["57","58","59","60","61","62","63","64","65","66","67","68","69"],"import { Form, Button, Row, Col, Accordion, Card, Modal, Pagination, OverlayTrigger, Tooltip, Dropdown, DropdownButton } from 'react-bootstrap';\r\nimport React, { useEffect, useState }from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\nimport no from './img/noimage.png';\r\n\r\n\r\nimport './Search.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction Search() {\r\n    \r\n    \r\n    var [genre, genre_change] = useState({\r\n        'ÎìúÎùºÎßà' : 1, 'ÌåêÌÉÄÏßÄ' : 2, 'ÏÑúÎ∂Ä': 3, 'Í≥µÌè¨' : 4, 'Î°úÎß®Ïä§': 5, 'Î™®Ìóò':  6, 'Ïä§Î¶¥Îü¨': 7, 'ÎäêÏôÄÎ•¥' : 8,\r\n        'Ïª¨Ìä∏' : 9, 'Îã§ÌÅêÎ©òÌÑ∞Î¶¨' : 10, 'ÏΩîÎØ∏Îîî' : 11, 'Í∞ÄÏ°±' : 12, 'ÎØ∏Ïä§ÌÑ∞Î¶¨' : 13, 'Ï†ÑÏüÅ' : 14, 'Ïï†ÎãàÎ©îÏù¥ÏÖò' : 15,\r\n        'Î≤îÏ£Ñ' : 16, 'ÎÆ§ÏßÄÏª¨' : 17, 'SF' : 18, 'Ïï°ÏÖò' : 19, 'Î¨¥Ìòë' : 20, 'ÏóêÎ°ú' : 21, 'ÏÑúÏä§ÌéúÏä§' : 22, 'ÏÑúÏÇ¨' : 23, 'Î∏îÎûôÏΩîÎØ∏Îîî' : 24,\r\n        'Ïã§Ìóò' : 25, 'ÏòÅÌôîÏπ¥Ìà∞' : 26, 'ÏòÅÌôîÏùåÏïÖ' : 27, 'ÏòÅÌôîÌå®Îü¨ÎîîÌè¨Ïä§ÌÑ∞' : 28\r\n    })\r\n    \r\n    var [searchWord, setSearchWord] = useState('');\r\n    var [startDate, setStartDate] = useState(new Date());\r\n    var [endDate, setEndDate] = useState(new Date());\r\n    var [date_search, setDate_search] = useState(true);\r\n    var [selectGenre, setSelectGenre] = useState(0);\r\n    var [searchResult, searchResult_change] = useState([])\r\n    var [showResult, showResult_change] = useState(false);\r\n    var [modalState, setModalState] = useState(false);\r\n    var [items, setItems] = useState([]);\r\n    var [quote, setQuote] = useState({});\r\n    var [searchInMain, setSearchInMain] = useState(localStorage.getItem('searchWord') != null ? localStorage.getItem('searchWord') : '');\r\n    \r\n    useEffect(() => {\r\n        var quoteNum = Math.floor(Math.random() * 50) + 1;\r\n\r\n        axios.get('/public/quote', {\r\n            params : {\r\n                q : quoteNum,\r\n            }\r\n        }).then( result => {\r\n            setQuote(result.data);\r\n        })\r\n\r\n        if(searchInMain){\r\n            localStorage.removeItem('searchWord');\r\n            handlerSubmit();\r\n        }\r\n    }, []);\r\n\r\n    const handlerSubmit = (e) => {\r\n        if (searchInMain == \"\") {\r\n            e.preventDefault();\r\n        }\r\n        \r\n        var setting;\r\n        if (!date_search) {\r\n            setting = {\r\n                query : searchWord,\r\n                genre : selectGenre,\r\n                display : 100,\r\n                yearfrom : startDate.getFullYear(),\r\n                yearto : endDate.getFullYear(),\r\n            }\r\n        }\r\n        else {\r\n            if(searchInMain){\r\n                setting = {\r\n                    query : searchInMain,\r\n                    genre : selectGenre,\r\n                    display : 100,\r\n                }\r\n            }\r\n            else {\r\n                setting = {\r\n                    query : searchWord,\r\n                    genre : selectGenre,\r\n                    display : 100,\r\n                }\r\n            }           \r\n        }\r\n        axios.get('/public/searchList', {\r\n            params : setting,\r\n        })\r\n        .then(res => {\r\n            var result = res.data;\r\n\r\n            result.sort(function (a, b) {\r\n                if (a.pubDate > b.pubDate) {\r\n                  return -1;\r\n                }\r\n                if (a.pubDate < b.pubDate) {\r\n                  return 1;\r\n                }\r\n                // a must be equal to b\r\n                return 0;\r\n              });\r\n            showResult_change(false); // Component Ïû¨ÎûúÎçîÎßÅÏùÑ ÏúÑÌï¥ Í≤ÄÏÉâÍ≤∞Í≥ºÎ•º ÏóÜÏï†Í∏∞\r\n            searchResult_change(result);\r\n            showResult_change(true);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='container mt-4'>\r\n            <div className='top-box mt-5 mb-5'>\r\n                <div className='top-title h1'>SEARCH MOVIE</div>\r\n                <div className=''>\r\n                    <div className=\"quote-content font-italic \">\"{quote.text}\"</div>\r\n                    <div className=\"quote-info font-italic text-right\">- {quote.title} / {quote.year} -</div>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <div className='search-box'>\r\n                <Form onSubmit={handlerSubmit}>\r\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"\">\r\n                        <Form.Label column xs={2} style={{borderRight : '1px solid white'}}>Ï†ú Î™©</Form.Label>\r\n                        <Col xs={10}>\r\n                            <Form.Control type=\"text\" placeholder=\"Search...\" onChange={ e => {\r\n                                setSearchWord(e.target.value);\r\n                            }} value = {\r\n                                searchInMain\r\n                                ? searchInMain\r\n                                : searchWord\r\n                            }\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    \r\n                        \r\n                    <Accordion>\r\n                        <Accordion.Item eventKey=\"0\" >\r\n                            <Accordion.Header className='search-detail'>Search Detail</Accordion.Header>\r\n                            <Accordion.Body className='search-detail'>\r\n                                <Form.Group as={Row} className=\"mb-3 genreGroup\" controlId=\"\">\r\n                                    <Form.Label column  xs={2} style={{ borderRight : '1px solid #212529'}}>Ïû• Î•¥</Form.Label>\r\n                                    <Col key={'inline-radio'} xs={10} style={{textAlign : 'left'}} >\r\n                                        <Form.Check type={'radio'} inline label={\"Ï†ÑÏ≤¥\"} name=\"group1\" value={'Ï†ÑÏ≤¥'} id={'inline-radio-0'} className=\"genreName\"  onClick={(e) => {\r\n                                            setSelectGenre(0);\r\n                                        }} />\r\n                                        {\r\n                                            Object.keys(genre).map(function(g, i ){\r\n                                                return <Form.Check type={'radio'} inline label={g} name=\"group1\" value={g} id={'inline-radio-' + i} className=\"genreName\" key={i} onClick={(e) => {\r\n                                                    setSelectGenre(genre[e.target.value]);\r\n                                                }} />\r\n                                            })\r\n                                        }\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row} className=\"mb-3 genreGroup\" controlId=\"\">\r\n                                    <Form.Label column xs={2} style={{ borderRight : '1px solid #212529'}}>Í∞úÎ¥âÏó∞ÎèÑ</Form.Label>\r\n                                    <Col xs={10} className='mt-2 search-year'>\r\n                                        <div key = 'default-checkbox' className=\"mb-3 w-50\">\r\n                                            <Form.Check\r\n                                                    checked={!date_search}\r\n                                                    type = 'checkbox'\r\n                                                    id = 'default-checkbox'\r\n                                                    label = 'ÎÇ†ÏßúÎ°ú Í≤ÄÏÉâ'\r\n                                                    onChange = {() => {\r\n                                                        setDate_search(!date_search);\r\n                                                    }}\r\n                                                />\r\n                                        </div>\r\n                                        <div className=\"datepicker-content\">\r\n                                            <DatePicker \r\n                                                selected={startDate}\r\n                                                onChange={(date) => {\r\n                                                    if (date > endDate){\r\n                                                        alert('ÏûòÎ™ªÎêú ÎÇ†Ïßú ÏÑ§Ï†ïÏûÖÎãàÎã§.');\r\n                                                    } else {\r\n                                                        setStartDate(date)\r\n                                                    }\r\n                                                }}\r\n                                                showYearPicker\r\n                                                dateFormat=\"yyyy\"\r\n                                                className='datepicker'\r\n                                                disabled = {date_search}/>\r\n                                        </div>\r\n                                        <div className=\"datepicker-style datepicker-content\" > ÎÖÑ ~</div>\r\n                                        <div className=\"datepicker-content\">\r\n                                            <DatePicker \r\n                                                selected={endDate}\r\n                                                onChange={(date) => {\r\n                                                    if (date < startDate){\r\n                                                        alert('ÏûòÎ™ªÎêú ÎÇ†Ïßú ÏÑ§Ï†ïÏûÖÎãàÎã§.');\r\n                                                    } else {\r\n                                                        setEndDate(date);\r\n                                                    }\r\n                                                }}\r\n                                                showYearPicker\r\n                                                dateFormat=\"yyyy\"\r\n                                                className='datepicker'\r\n                                                disabled = {date_search}/>\r\n                                        </div>\r\n                                        <div className=\"datepicker-style datepicker-content\" > ÎÖÑ</div>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                    </Accordion>\r\n\r\n                    <Button variant=\"primary\" className=\"mt-3 search-result\" type=\"submit\" >Search</Button>\r\n                </Form>\r\n\r\n            </div>\r\n            \r\n            {\r\n                showResult\r\n                ? <SearchResult word={searchWord} result={searchResult} modalState={modalState} setModalState={setModalState} className=\"pb-5\"/>\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction SearchResult(props) {\r\n\r\n    var [searchResult, searchResult_change] = useState(props.result);\r\n    var [page, setPage] = useState(1);\r\n    var [pageComp, setPageComp] = useState([]);\r\n    var [modalData, setModalData] = useState({});\r\n    \r\n    useEffect(() => {\r\n        let items = [];\r\n        for (let number = 1; number <= Math.ceil(searchResult.length/20); number++) {\r\n            items.push(\r\n            <Pagination.Item key={number} active={number === page} onClick={() => {\r\n                setPage(number);\r\n                window.scrollTo(0,0);\r\n            }}>\r\n                {number}\r\n            </Pagination.Item>,\r\n            );\r\n        }\r\n        setPageComp(items);\r\n    }, [page])\r\n    \r\n    \r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <div>\r\n                <h2 style={{float:'left', margin:'0'}}><span className='h2 text-primary'>\"{props.word}\"</span> Ïóê ÎåÄÌïú Í≤ÄÏÉâÍ≤∞Í≥º</h2>\r\n                \r\n                <p style={{float:'right'}}>Ï¥ù <span className='h3 text-primary'>{searchResult.length}</span> Í∞ú</p>\r\n                <DropdownButton id=\"dropdown-basic-button\" title=\"Filter\" style={{float:'right'}} onChange={() => {console.log(1)}}>\r\n                    <Dropdown.Item >Ïù¥Î¶Ñ</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#/action-2\">Ïó∞ÎèÑ</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#/action-2\">ÌèâÏ†ê ÎÜíÏùÄ Ïàú</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#/action-3\">ÌèâÏ†ê ÎÇÆÏùÄ Ïàú</Dropdown.Item>\r\n                </DropdownButton>\r\n            </div>\r\n            <div style={{clear : 'both'}}></div>\r\n            <hr style={{marginTop : '0'}}/>\r\n\r\n            <div className='row searchResult-list'>\r\n                <Row style={{margin : 'auto'}}>\r\n                    {\r\n                        \r\n                        searchResult.slice((page-1) * 20, (page-1) * 20 + 20).map(function(m, i) {\r\n                            return (\r\n                            <Col className=\"mt-3 mb-2\" xs={6} md={4} lg={3} key={i}>\r\n                                <Movie source={m} setModalData={setModalData} setModalState = {props.setModalState}/>\r\n                            </Col>\r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n            </div>\r\n\r\n            {\r\n                props.modalState\r\n                ? <Moviedetail modalState={props.modalState} onHide={() => props.setModalState(false)} modalData={modalData}/>\r\n                : null\r\n            }\r\n\r\n            <Pagination>{pageComp}</Pagination>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Moviedetail(props) {\r\n    var [like, setLike] = useState(false)\r\n    var [posterUrl, setPosterUrl] = useState('');\r\n    var [userInfo, setUserInfo] = useState(JSON.parse(localStorage.getItem('userInfo')));\r\n\r\n    useEffect(() => {\r\n        axios.get('/public/poster',{\r\n            params : {\r\n                code : props.modalData.link.split(\"=\")[1],\r\n            }\r\n        })\r\n        .then(res => {\r\n            setPosterUrl(res.data);\r\n        })\r\n    }, [props.modalData])\r\n\r\n    useEffect(() => {\r\n        axios.get('/public/isLiked', {\r\n\t\t\tparams : {\r\n\t\t\t\temail : userInfo.email,\r\n\t\t\t}\r\n\t\t}).then( result => {\r\n            console.log(result);\r\n\t\t})\r\n    })\r\n\r\n    const addLike = e => {\r\n        axios.get('/public/addLike', {\r\n\t\t\tparams : {\r\n\t\t\t\temail : userInfo.email,\r\n                movie : props.modalData,\r\n\t\t\t}\r\n\t\t}).then( result => {\r\n\t\t\tconsole.log(result.data.liked);\r\n\t\t})\r\n    }\r\n\r\n    const renderTooltip = (props) => (\r\n        <Tooltip id=\"button-tooltip\" {...props}>\r\n          Like\r\n        </Tooltip>\r\n      );\r\n\r\n    return (\r\n        <Modal\r\n            show = {props.modalState}\r\n            onHide = {props.onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            className = \"search-modal\"\r\n            >\r\n            <Modal.Header closeButton/>\r\n            <Modal.Body>\r\n                <Row className='modal-info'>\r\n                    <Col xs={3} className=\"modal-img\">\r\n                        <img className=\"\" src={ posterUrl === \"\" ? null : posterUrl }/>\r\n                    </Col>\r\n                    <Col xs={9} className=\"modal-detail\">\r\n                        <div className=\"modal-titleBox mb-3\">\r\n                            <div id=\"contained-modal-title-vcenter\" className=\"modal-title\">{props.modalData.title.split(/<b>|<\\/b>/g).join(\"\")}</div>\r\n                            <div id=\"contained-modal-title-vcenter\" className=\"modal-sub\">{props.modalData.subtitle.split(/<b>|<\\/b>/g).join(\"\")} / {props.modalData.pubDate}</div>\r\n                        </div>\r\n                        <div className='mt-2 mb-2'><span>Îü∞ÌÉÄÏûÑ : </span></div>\r\n                        <div className='mt-2 mb-2'><span>Íµ≠Í∞Ä / Ïû•Î•¥ : </span></div>\r\n                        <div className='mt-2 mb-2'><span>Í∞êÎèÖ : </span>{props.modalData.director.split(\"|\").slice(0, -1).join(', ')}</div>\r\n                        <div className='mt-2 mb-2'><span>Î∞∞Ïö∞ : </span>{props.modalData.actor.split(\"|\").slice(0, -1).join(', ')}</div>\r\n                        <div className='mt-2 mb-2'><span>ÌèâÏ†ê : </span>‚≠ê {props.modalData.userRating}</div>\r\n                        <div className='mt-2 mb-2'><span>Í¥ÄÍ∞ù Ïàò : </span></div>\r\n                        <div className='mt-2 mb-2'><span>ÏÇ¨Ïù¥Ìä∏ : </span><a target=\"_blank\" href={props.modalData.link }>Î∞îÎ°úÍ∞ÄÍ∏∞</a></div>\r\n                        <OverlayTrigger\r\n                            placement=\"bottom\"\r\n                            delay={{ show: 50, hide: 50 }}\r\n                            overlay={renderTooltip}\r\n                            >\r\n                            <button className=\"btn btn-secondary like\" onClick = {() => setLike(!like)} style={\r\n                                like\r\n                                ? ({'color' : 'red'})\r\n                                : null\r\n                            }> ‚ô• </button>\r\n                        </OverlayTrigger>\r\n                        \r\n                    </Col>\r\n                    <hr className=\"mt-3 mb-3\"/>\r\n                    <Col xs={12} className=\"modal-analy\">\r\n                        <p>Ïó¨Í∏∞Ïóê Î≠ê ÎÑ£ÏßÄ</p>\r\n                    </Col>\r\n                </Row>\r\n                \r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nfunction Movie(props) {\r\n\r\n\r\n    return (\r\n        <Card  className=\"searchResult_movie\" onClick={() => {\r\n            props.setModalData(props.source);\r\n            props.setModalState(true);\r\n        }} >\r\n            <div className=\"searchResult_img\" >\r\n                <Card.Img variant=\"top\" src={ props.source.image === \"\" ? no : props.source.image } />\r\n            </div>\r\n            <Card.Body className=\"searchReuslt_content\">\r\n                <Card.Title className=\"searchResult_title\">{props.source.title.split(/<b>|<\\/b>/g).join(\"\")}</Card.Title>\r\n                <Card.Title className=\"searchResult_subtitle\">{props.source.subtitle.split(/<b>|<\\/b>/g).join(\"\")}</Card.Title>\r\n                \r\n                <Card.Text className=\"searchResult_info mt-4\">{props.source.director.split(\"|\").length > 2 ? props.source.director.split(\"|\")[0] + ' Ïô∏ ' + (props.source.director.split(\"|\").length - 2) + 'Î™Ö' : props.source.director.split(\"|\").slice(0, -1).join()} / {props.source.pubDate}</Card.Text>\r\n                <Card.Text className=\"searchResult_info\">ÌèâÏ†ê‚≠ê {props.source.userRating}</Card.Text>\r\n            </Card.Body>\r\n                \r\n            <div className='cover'></div>\r\n        </Card>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Search;","C:\\Users\\psu84\\movidic\\movie_react\\src\\history.js",["70","71","72","73","74"],"import { Button, Card, ListGroup, Row, Col, Accordion, Table} from 'react-bootstrap';\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport DatePicker from \"react-datepicker\";\r\nimport ReactDOM from 'react-dom';\r\nimport { LinearProgress } from '../node_modules/@mui/material';\r\n\r\nimport './History.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction App() {\r\n    \r\n    var [quote, setQuote] = useState({});\r\n    var [movieChart, setMovieChart] = useState([]);\r\n    var [startDate, setStartDate] = useState(new Date());\r\n    var [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        var quoteNum = Math.floor(Math.random() * 50) + 1;\r\n\r\n        axios.get('/public/quote', {\r\n            params : {\r\n                q : quoteNum,\r\n            }\r\n        }).then( result => {\r\n            setQuote(result.data);\r\n        })\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        setLoading(true);\r\n\r\n        var today = startDate;\r\n        var year = today.getFullYear();\r\n        var month = (today.getMonth() + 1) >= 10 ? (today.getMonth() + 1) : '0' + (today.getMonth() + 1);\r\n        var day = (today.getDate() - 1) >= 10 ? (today.getDate() - 1) : '0' + (today.getDate() - 1);\r\n        \r\n        axios.get('/public/history', {\r\n            params : {\r\n                date : parseInt(year + \"\" + month + \"\" + day),\r\n            }\r\n        })\r\n        .then(res => {\r\n            let timer = setTimeout(()=>{ \r\n                setLoading(false);\r\n                setMovieChart(res.data);\r\n            }, 500);\r\n            \r\n        })\r\n    }, [startDate])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className='top-box mt-5 mb-5'>\r\n                <div className='top-title h1'>MOVIE HISTORY</div>\r\n                <div className=''>\r\n                    <div className=\"quote-content font-italic \">\"{quote.text}\"</div>\r\n                    <div className=\"quote-info font-italic text-right\">- {quote.title} / {quote.year} -</div>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <div className='history-box'>\r\n                <div className=\"history-date\">\r\n                    <Button variant=\"primary\" onClick={() => {\r\n                        setMovieChart([]);\r\n                        var newDate = new Date(startDate);\r\n                        newDate.setDate(newDate.getDate() - 1);\r\n                        setStartDate(newDate);\r\n                    }}>&lt;</Button>\r\n                    <DatePicker \r\n                        selected={startDate}\r\n                        onChange={(date) => {\r\n                            setStartDate(date);\r\n                        }}\r\n                        dateFormat=\"yyyy/MM/dd (EE)\"\r\n                        className='datepicker'\r\n                        style = {{width : '100%'}}/>\r\n                    <Button variant=\"primary\" onClick={() => {\r\n                        setMovieChart([]);\r\n                        if (startDate.getDate() >= new Date().getDate())\r\n                            alert('Ïò§ÎäòÏûÖÎãàÎã§!');\r\n                        else {\r\n                            var newDate = new Date(startDate);\r\n                            newDate.setDate(newDate.getDate() + 1);\r\n                        }\r\n                        setStartDate(newDate);\r\n                    }}>&gt;</Button>\r\n                </div>\r\n                {\r\n                    loading\r\n                    ?  <LinearProgress />\r\n                    : null\r\n                }\r\n                <Moviehistory2 movies={movieChart}/>\r\n                \r\n            </div>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Moviehistory2(props) {\r\n    return (\r\n        <div className='container'>\r\n            <Row>\r\n            {\r\n                props.movies.map((movie, i) => {\r\n                    return (\r\n                        <Moviecard movie={movie} key={i}/>\r\n                    )\r\n                    \r\n                })\r\n            }\r\n            </Row>\r\n            <div style={{clear : 'both'}}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Moviecard(props) {\r\n\r\n    var [movieDetail, setMovieDetail] = useState({});\r\n\r\n    useEffect(() => {\r\n        axios.get('/public/moviedetail', {\r\n            params : {\r\n                code : props.movie.movieCd,\r\n            }\r\n        })\r\n        .then(res => {\r\n            setMovieDetail(res.data);\r\n        })\r\n    }, [])\r\n\r\n    function directors(dir) {\r\n        if (dir == null)\r\n            return ''; \r\n        else if (dir.length > 1)\r\n            return dir[0].peopleNm + ' Ïô∏ ' + (dir.length - 1) + ' Î™Ö';\r\n        else \r\n            return dir[0].peopleNm;\r\n    }\r\n\r\n    function rankChange(rank) {\r\n        if(rank > 0) {\r\n            return ['‚ñ≤ ' + rank, 'text-danger history-updown']\r\n        }\r\n        else if (rank < 0) {\r\n            return ['‚ñº ' + String(rank * -1), 'text-primary history-updown'];\r\n        }\r\n        else {\r\n            return ['-', 'history-updown'];\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Col xs={6} className='poster'>\r\n            \r\n            <Accordion>\r\n                <Accordion.Item eventKey=\"0\">\r\n                    <Accordion.Header >\r\n                        <div className=\"history-rank text-center\">\r\n                            <div className=\"h4\">{props.movie.rank}</div>\r\n                            <div className={rankChange(props.movie.rankInten)[1]}>{rankChange(props.movie.rankInten)[0]}</div>\r\n                        </div>\r\n                        <div className='history-title'>{props.movie.movieNm}</div>\r\n                        {\r\n                            props.movie.rankOldAndNew === 'NEW'\r\n                            ? <div className='text-danger history-new' style={{fontWeight : 'bolder', fontSize : '15px'}}>{props.movie.rankOldAndNew}</div>\r\n                            : null\r\n                        }\r\n                        \r\n                        \r\n                    </Accordion.Header>\r\n                    <Accordion.Body className='history-detail'>\r\n                        <Table responsive=\"sm\">\r\n                            <tr>\r\n                                <th>Í∞úÎ¥âÏùº</th>\r\n                                <th>{props.movie.openDt}</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Ï¥ù Í¥ÄÍ∞ùÏàò</th>\r\n                                <th>{parseInt(props.movie.audiAcc).toLocaleString('en-US')} Î™Ö</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Í∞êÎèÖ</th>\r\n                                <th>{directors(movieDetail.directors)}</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Îü∞ÌÉÄÏûÑ</th>\r\n                                <th>{movieDetail.showTm} Î∂Ñ</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Table heading</th>\r\n                            </tr>\r\n                        </ Table>\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n            </Accordion>\r\n        </Col>\r\n    )\r\n}\r\n\r\n\r\nfunction Moviehistory(props) {\r\n\r\n    function rankChange(rank) {\r\n        if(rank > 0) {\r\n            return ['‚ñ≤ ' + rank, 'text-danger']\r\n        }\r\n        else if (rank < 0) {\r\n            return ['‚ñº ' + String(rank * -1), 'text-primary'];\r\n        }\r\n        else {\r\n            return ['-', ''];\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <ListGroup as=\"ol\">\r\n                {\r\n                    props.movies.map((movie, i) => {\r\n                        return (\r\n                            <ListGroup.Item as=\"li\" key={i} className='history-comp'>\r\n                                <Row>\r\n                                    <Col xs={1} className='history-rank'>\r\n                                        <div className=\"h4\">{movie.rank}</div>\r\n                                        <div className={rankChange(movie.rankInten)[1]}>{rankChange(movie.rankInten)[0]}</div>\r\n                                        {\r\n                                            movie.rankOldAndNew === 'NEW'\r\n                                            ? <div className='text-danger' style={{fontWeight : 'bolder', fontSize : '15px'}}>{movie.rankOldAndNew}</div>\r\n                                            : null\r\n                                        }\r\n                                    </Col>\r\n                                    <Col xs={11} className='history-content'>\r\n                                        <div>\r\n                                            <div className='h4'>{movie.movieNm}</div>\r\n                                            <div>{movie.openDt} Í∞úÎ¥â</div>\r\n                                            <div>Ïùº Í¥ÄÍ∞ùÏàò | {movie.audiCnt} Î™Ö</div>\r\n                                            <div>Ï¥ù Í¥ÄÍ∞ùÏàò | {movie.audiAcc} Î™Ö</div>\r\n                                        </div>\r\n                                        <div>\r\n                                            {movie.watchGradeNm}\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </ListGroup.Item>\r\n                        )\r\n                    })\r\n                }\r\n            </ListGroup>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","C:\\Users\\psu84\\movidic\\movie_react\\src\\fbase.js",[],"C:\\Users\\psu84\\movidic\\movie_react\\src\\myPage.js",["75","76","77","78","79","80","81","82","83","84"],"import { Button, Card, ListGroup, Row, Col, Accordion, Table} from 'react-bootstrap';\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './MyPage.css';\r\nimport user from './img/user.png';\r\n\r\nfunction App() {\r\n    \r\n    var [userInfo, setUserInfo] = useState(JSON.parse(localStorage.getItem('userInfo')));\r\n    var [likedMovie, setLikedMovie] = useState({})\r\n\r\n    useEffect(() => {\r\n        axios.get('/public/createUserLike', {\r\n\t\t\tparams : {\r\n\t\t\t\temail : userInfo.email,\r\n\t\t\t}\r\n\t\t}).then( result => {\r\n\t\t\tconsole.log(result.data.liked);\r\n\t\t})\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className='container mypage-bg'>\r\n            <Row className=''>\r\n                <Col className='mt-5 mypage-userinfo'>\r\n                    <div className='mypage-userinfo-img'>\r\n                        <img src={user}/>\r\n                    </div>\r\n                    <div className='mypage-userinfo-info'>\r\n                        <p className='h2'>{userInfo.firstName + \" \" + userInfo.lastName}</p>\r\n                        <p>E-mail : {userInfo.email}</p>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <hr style={{width : \"90%\", margin : '30px auto'}}/>\r\n            <Row className=\"mypage-movie\">\r\n                <p className=\"h3 text-center\">üòé Í¥ÄÏã¨ ÏûëÌíà üòé</p>\r\n                <Col className=\"mt-3 mypage-movie\">\r\n                    {\r\n                        likedMovie\r\n                        ? <p className='no-result'>üôÑ Í¥ÄÏã¨ ÏûëÌíàÏù¥ ÏóÜÏäµÎãàÎã§!</p>\r\n                        : 'HIHI'\r\n                    }\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n// function Movie(props) {\r\n\r\n\r\n//     return (\r\n//         <Card  className=\"searchResult_movie\" onClick={() => {\r\n//             props.setModalData(props.source);\r\n//             props.setModalState(true);\r\n//         }} >\r\n//             <div className=\"searchResult_img\" >\r\n//                 <Card.Img variant=\"top\" src={ props.source.image === \"\" ? no : props.source.image } />\r\n//             </div>\r\n//             <Card.Body className=\"searchReuslt_content\">\r\n//                 <Card.Title className=\"searchResult_title\">{props.source.title.split(/<b>|<\\/b>/g).join(\"\")}</Card.Title>\r\n//                 <Card.Title className=\"searchResult_subtitle\">{props.source.subtitle.split(/<b>|<\\/b>/g).join(\"\")}</Card.Title>\r\n                \r\n//                 <Card.Text className=\"searchResult_info mt-4\">{props.source.director.split(\"|\").length > 2 ? props.source.director.split(\"|\")[0] + ' Ïô∏ ' + (props.source.director.split(\"|\").length - 2) + 'Î™Ö' : props.source.director.split(\"|\").slice(0, -1).join()} / {props.source.pubDate}</Card.Text>\r\n//                 <Card.Text className=\"searchResult_info\">ÌèâÏ†ê‚≠ê {props.source.userRating}</Card.Text>\r\n//             </Card.Body>\r\n                \r\n//             <div className='cover'></div>\r\n//         </Card>\r\n//     )\r\n\r\n// }\r\n\r\n\r\n\r\nexport default App;",{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":1,"column":49,"nodeType":"91","messageId":"92","endLine":1,"endColumn":53},{"ruleId":"89","severity":1,"message":"93","line":2,"column":17,"nodeType":"91","messageId":"92","endLine":2,"endColumn":26},{"ruleId":"89","severity":1,"message":"94","line":4,"column":8,"nodeType":"91","messageId":"92","endLine":4,"endColumn":13},{"ruleId":"95","severity":1,"message":"96","line":38,"column":8,"nodeType":"97","endLine":38,"endColumn":90},{"ruleId":"89","severity":1,"message":"98","line":116,"column":5,"nodeType":"91","messageId":"92","endLine":116,"endColumn":9},{"ruleId":"95","severity":1,"message":"96","line":191,"column":81,"nodeType":"97","endLine":191,"endColumn":186},{"ruleId":"89","severity":1,"message":"99","line":1,"column":16,"nodeType":"91","messageId":"92","endLine":1,"endColumn":30},{"ruleId":"89","severity":1,"message":"100","line":1,"column":32,"nodeType":"91","messageId":"92","endLine":1,"endColumn":40},{"ruleId":"89","severity":1,"message":"101","line":1,"column":48,"nodeType":"91","messageId":"92","endLine":1,"endColumn":54},{"ruleId":"89","severity":1,"message":"102","line":2,"column":17,"nodeType":"91","messageId":"92","endLine":2,"endColumn":27},{"ruleId":"89","severity":1,"message":"103","line":14,"column":13,"nodeType":"91","messageId":"92","endLine":14,"endColumn":24},{"ruleId":"95","severity":1,"message":"96","line":50,"column":17,"nodeType":"97","endLine":50,"endColumn":74},{"ruleId":"95","severity":1,"message":"96","line":60,"column":17,"nodeType":"97","endLine":60,"endColumn":122},{"ruleId":"95","severity":1,"message":"96","line":62,"column":17,"nodeType":"97","endLine":62,"endColumn":121},{"ruleId":"95","severity":1,"message":"96","line":124,"column":21,"nodeType":"97","endLine":124,"endColumn":69},{"ruleId":"95","severity":1,"message":"96","line":128,"column":21,"nodeType":"97","endLine":128,"endColumn":68},{"ruleId":"89","severity":1,"message":"104","line":5,"column":8,"nodeType":"91","messageId":"92","endLine":5,"endColumn":9},{"ruleId":"89","severity":1,"message":"105","line":15,"column":17,"nodeType":"91","messageId":"92","endLine":15,"endColumn":29},{"ruleId":"89","severity":1,"message":"106","line":30,"column":10,"nodeType":"91","messageId":"92","endLine":30,"endColumn":15},{"ruleId":"89","severity":1,"message":"107","line":30,"column":17,"nodeType":"91","messageId":"92","endLine":30,"endColumn":25},{"ruleId":"89","severity":1,"message":"108","line":32,"column":24,"nodeType":"91","messageId":"92","endLine":32,"endColumn":39},{"ruleId":"109","severity":1,"message":"110","line":49,"column":8,"nodeType":"111","endLine":49,"endColumn":10,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":52,"column":26,"nodeType":"115","messageId":"116","endLine":52,"endColumn":28},{"ruleId":"89","severity":1,"message":"117","line":218,"column":24,"nodeType":"91","messageId":"92","endLine":218,"endColumn":43},{"ruleId":"109","severity":1,"message":"118","line":236,"column":8,"nodeType":"111","endLine":236,"endColumn":14,"suggestions":"119"},{"ruleId":"89","severity":1,"message":"120","line":285,"column":20,"nodeType":"91","messageId":"92","endLine":285,"endColumn":31},{"ruleId":"89","severity":1,"message":"121","line":308,"column":11,"nodeType":"91","messageId":"92","endLine":308,"endColumn":18},{"ruleId":"95","severity":1,"message":"96","line":337,"column":25,"nodeType":"97","endLine":337,"endColumn":88},{"ruleId":"122","severity":1,"message":"123","line":350,"column":71,"nodeType":"97","messageId":"124","endLine":350,"endColumn":119,"fix":"125"},{"ruleId":"89","severity":1,"message":"126","line":1,"column":18,"nodeType":"91","messageId":"92","endLine":1,"endColumn":22},{"ruleId":"89","severity":1,"message":"127","line":5,"column":8,"nodeType":"91","messageId":"92","endLine":5,"endColumn":16},{"ruleId":"89","severity":1,"message":"128","line":46,"column":17,"nodeType":"91","messageId":"92","endLine":46,"endColumn":22},{"ruleId":"109","severity":1,"message":"129","line":136,"column":8,"nodeType":"111","endLine":136,"endColumn":10,"suggestions":"130"},{"ruleId":"89","severity":1,"message":"131","line":209,"column":10,"nodeType":"91","messageId":"92","endLine":209,"endColumn":22},{"ruleId":"89","severity":1,"message":"101","line":1,"column":10,"nodeType":"91","messageId":"92","endLine":1,"endColumn":16},{"ruleId":"89","severity":1,"message":"126","line":1,"column":18,"nodeType":"91","messageId":"92","endLine":1,"endColumn":22},{"ruleId":"89","severity":1,"message":"132","line":1,"column":24,"nodeType":"91","messageId":"92","endLine":1,"endColumn":33},{"ruleId":"89","severity":1,"message":"133","line":1,"column":45,"nodeType":"91","messageId":"92","endLine":1,"endColumn":54},{"ruleId":"89","severity":1,"message":"134","line":1,"column":56,"nodeType":"91","messageId":"92","endLine":1,"endColumn":61},{"ruleId":"89","severity":1,"message":"127","line":4,"column":8,"nodeType":"91","messageId":"92","endLine":4,"endColumn":16},{"ruleId":"89","severity":1,"message":"120","line":11,"column":20,"nodeType":"91","messageId":"92","endLine":11,"endColumn":31},{"ruleId":"89","severity":1,"message":"135","line":12,"column":22,"nodeType":"91","messageId":"92","endLine":12,"endColumn":35},{"ruleId":"109","severity":1,"message":"136","line":23,"column":8,"nodeType":"111","endLine":23,"endColumn":10,"suggestions":"137"},{"ruleId":"95","severity":1,"message":"96","line":30,"column":25,"nodeType":"97","endLine":30,"endColumn":42},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'data' is assigned a value but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'Button' is defined but never used.","'useHistory' is defined but never used.","'page_change' is assigned a value but never used.","'$' is defined but never used.","'genre_change' is assigned a value but never used.","'items' is assigned a value but never used.","'setItems' is assigned a value but never used.","'setSearchInMain' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handlerSubmit' and 'searchInMain'. Either include them or remove the dependency array.","ArrayExpression",["140"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'searchResult_change' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'searchResult.length'. Either include it or remove the dependency array.",["141"],"'setUserInfo' is assigned a value but never used.","'addLike' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"142","text":"143"},"'Card' is defined but never used.","'ReactDOM' is defined but never used.","'timer' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.movie.movieCd'. Either include it or remove the dependency array.",["144"],"'Moviehistory' is defined but never used.","'ListGroup' is defined but never used.","'Accordion' is defined but never used.","'Table' is defined but never used.","'setLikedMovie' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userInfo.email'. Either include it or remove the dependency array.",["145"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},[15646,15646]," rel=\"noreferrer\"",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [handlerSubmit, searchInMain]",{"range":"154","text":"155"},"Update the dependencies array to be: [page, searchResult.length]",{"range":"156","text":"157"},"Update the dependencies array to be: [props.movie.movieCd]",{"range":"158","text":"159"},"Update the dependencies array to be: [userInfo.email]",{"range":"160","text":"161"},[1953,1955],"[handlerSubmit, searchInMain]",[10959,10965],"[page, searchResult.length]",[4437,4439],"[props.movie.movieCd]",[630,632],"[userInfo.email]"]