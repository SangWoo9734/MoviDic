[{"C:\\Users\\psu84\\movidic\\movie_react\\src\\index.js":"1","C:\\Users\\psu84\\movidic\\movie_react\\src\\reportWebVitals.js":"2","C:\\Users\\psu84\\movidic\\movie_react\\src\\App.js":"3","C:\\Users\\psu84\\movidic\\movie_react\\src\\main.js":"4","C:\\Users\\psu84\\movidic\\movie_react\\src\\search.js":"5"},{"size":592,"mtime":1633623222965,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":1087,"mtime":1633714398528,"results":"9","hashOfConfig":"7"},{"size":9234,"mtime":1633623333268,"results":"10","hashOfConfig":"7"},{"size":5656,"mtime":1633805595844,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"bn6edh",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"C:\\Users\\psu84\\movidic\\movie_react\\src\\index.js",[],["26","27"],"C:\\Users\\psu84\\movidic\\movie_react\\src\\reportWebVitals.js",[],"C:\\Users\\psu84\\movidic\\movie_react\\src\\App.js",["28","29"],"import { Navbar, Container, Nav} from 'react-bootstrap';\nimport React from 'react'\n\nimport { Route } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\nimport whale from './img/whale.png';\n\nimport Boxoffice from './main.js'\nimport Search from './search.js'\n\nfunction App() {\n\n\t\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Navbar bg=\"dark\" variant=\"dark\">\n\t\t\t\t<Container className='text-center'>\n\t\t\t\t\t<Navbar.Brand href=\"#home\">\n\t\t\t\t\t\t<img src={whale} style={{width: '40px', height : '40px'}}/>\n\t\t\t\t\t\t<span>MOVIEDIC</span>\n\t\t\t\t\t\t</Navbar.Brand>\n\t\t\t\t\t\t<Nav className=\"me-auto\">\n\t\t\t\t\t\t<Nav.Link href=\"#home\">HOME</Nav.Link>\n\t\t\t\t\t\t<Nav.Link href=\"#features\">BOXOFFICE</Nav.Link>\n\t\t\t\t\t\t<Nav.Link href=\"#pricing\">HISTORY</Nav.Link>\n\t\t\t\t\t\t<Nav.Link href=\"#pricing\">MY</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Container>\n\t\t\t</Navbar>\n\n\n\t\t\t{/* <CaroselSet /> */}\n\t\t\t{/* <button onClick={() => {\n\t\t\t\taxios.get('local')\n\t\t\t}}></button> */}\n\n\t\t\t<Route expact path='/dd'>\n\t\t\t\t<Boxoffice />\n\t\t\t</ Route>\n\n\t\t\t<Route expact path='/'>\n\t\t\t\t<Search />\n\t\t\t</Route>\n\t\t</div>\n\t);\n}\n\n\n\nexport default App;\n","C:\\Users\\psu84\\movidic\\movie_react\\src\\main.js",["30","31","32"],"import { Card, DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport next from './img/next.png';\r\nimport before from './img/before.png';\r\n\r\n\r\n\r\nfunction Boxoffice() {\r\n\r\n    var [top10, top10_change] = useState([]);\r\n\tvar [page, page_change] = useState(1);\r\n\tvar [slide, slide_change] = useState(0);\r\n\r\n\t// const getHtml = async() => {\r\n\t// \ttry {\r\n\t// \t\treturn await axios.get('https://movie.naver.com/movie/running/current.naver');\r\n\t// \t} catch (err){\r\n\t// \t\tconsole.log(err);\r\n\t// \t}\r\n\t// }\r\n\t\r\n\tuseEffect(() => {\r\n\r\n\t\ttry {\r\n\t\t\taxios.get(\"http://localhost:8080/public/top10\")\r\n\t\t\t.then(response => {\r\n\t\t\t\tvar json = response.data.result;\r\n\t\t\t\ttop10_change(json);\r\n\t\t\t\tconsole.log(json);\r\n\t\t\t\t// var json = resonse.data.boxOfficeResult.dailyBoxOfficeList\r\n\t\t\t})\r\n\r\n\t\t} catch {\r\n\t\t\t// 오류 발생시 실행\r\n\t\t}\r\n\t\t\r\n\t\t// 네이버 영화 크롤링\r\n\t\t\r\n\t// \taxios.get('https://kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json', {\r\n\t// \t\tparams : {\r\n\t// \t\t\tkey : '36fcb6727085802f6401dc96e6743cf4',\r\n\t// \t\t\ttargetDt : 20211002,\r\n\t// \t\t},\r\n\t// \t\t// headers : headers,\r\n\t// \t}).then(resonse => {\r\n\t// \t\tvar json = resonse.data.boxOfficeResult.dailyBoxOfficeList\r\n\r\n\t// \t\ttop10_change(json);\r\n\t// \t\t// console.log(resonse.data.boxOfficeResult.dailyBoxOfficeList);\r\n\t// \t}).catch( error => {\r\n\t// \t\tconsole.log(error);\r\n\t// \t})\r\n\r\n\t// }, [page]);\r\n\t}, [page]);\r\n\r\n    return (\r\n        <div className=\"container mt-4 main-box\">\r\n            <h4 className=\"text-center\">TODAY BOXOFFICE</h4>\r\n            <div className=\"boxoffice mt-4\" style={{transform : 'translateX(' + {slide} +'%))'}}>\r\n                <div className={ slide === 0 ? \"boxoffice-view translate50\" : \"boxoffice-view translate50\"} >\r\n                    <div className='boxoffice-cardset'>\r\n                        {\r\n                            top10.slice(0, 5).map((movie, i) => {\r\n                                return (\r\n                                    <Card className=\"boxoffice-card\"key={i}>\r\n                                        <Card.Img variant=\"top\" className=\"boxoffice-img\" src={movie.posterUrl} />\r\n                                        <Card.Text className={'boxoffice-rank card-' + i}>{movie.id}</Card.Text>\r\n                                        <Card.Body className=\"boxoffice-bg\">\r\n                                            <Card.Title className=\"boxoffice-title\">\r\n                                                <div>{movie.title}</div>\r\n                                                <div className=\"boxoffice-subtitle\">{movie.subTitle}</div>\r\n                                            </Card.Title>\r\n                                            \r\n                                            \r\n                                            <Card.Text className='boxoffice-content'> {movie.info[0]}</Card.Text>\r\n                                            <Card.Text className='boxoffice-content'>{movie.info[2]}</Card.Text>\r\n                                            \r\n                                            {(() => {\r\n                                                    switch(movie.info[4]){\r\n                                                        case '전체 관람가' :\r\n                                                            return <Card.Text className='boxoffice-agebadge age-all'>ALL</Card.Text>\r\n                                                        case '12세 관람가' :\r\n                                                            return <Card.Text className='boxoffice-agebadge age-12'>12</Card.Text>\r\n                                                        case '15세 관람가' :\r\n                                                            return <Card.Text className='boxoffice-agebadge age-15'>15</Card.Text>\r\n                                                        case '청소년 관람불가' :\r\n                                                            return <Card.Text className='boxoffice-agebadge age-19'>19</Card.Text>\r\n                                                        default :\r\n                                                            return null;\r\n                                                    }\r\n                                            })()}\r\n                                            \r\n                                            <Card.Text className='boxoffice-content'>예매율 <span className='boxoffice-rate'><span>{movie.rate}</span> %</span></Card.Text>\r\n                                            <DropdownButton id=\"dropdown-basic-button\" title=\"예매하기\">\r\n                                                <Dropdown.Item href=\"#/action-1\">CGV</Dropdown.Item>\r\n                                                <Dropdown.Item href=\"#/action-2\">LOTTECINEMA</Dropdown.Item>\r\n                                                <Dropdown.Item href=\"#/action-3\">MEGA BOX</Dropdown.Item>\r\n                                            </DropdownButton>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className='boxoffice-cardset'>\r\n                        {\r\n                            top10.slice(5, 10).map((movie, i) => {\r\n                                return (\r\n                                    <Card className=\"boxoffice-card\" \tkey={i}>\r\n                                        <Card.Img variant=\"top\" className=\"boxoffice-img\" src={movie.posterUrl} />\r\n                                        <Card.Text className={'boxoffice-rank card-' + i}>{movie.id}</Card.Text>\r\n                                        <Card.Body className=\"boxoffice-bg\">\r\n                                            <Card.Title className=\"boxoffice-title\">\r\n                                                <div>{movie.title}</div>\r\n                                                <div className=\"boxoffice-subtitle\">{movie.subTitle}</div>\r\n                                            </Card.Title>\r\n                                            \r\n                                            \r\n                                            <Card.Text className='boxoffice-content'> {movie.info[0]}</Card.Text>\r\n                                            <Card.Text className='boxoffice-content'>{movie.info[2]}</Card.Text>\r\n                                            \r\n                                            {(() => {\r\n                                                    switch(movie.info[4]){\r\n                                                        case '전체 관람가' :\r\n                                                            return <Card.Text className='boxoffice-agebadge age-all'>ALL</Card.Text>\r\n                                                        case '12세 관람가' :\r\n                                                            return <Card.Text className='boxoffice-agebadge age-12'>12</Card.Text>\r\n                                                        case '15세 관람가' :\r\n                                                            return <Card.Text className='boxoffice-agebadge age-15'>15</Card.Text>\r\n                                                        case '청소년 관람불가' :\r\n                                                            return <Card.Text className='boxoffice-agebadge age-19'>19</Card.Text>\r\n                                                        default :\r\n                                                            return null;\r\n                                                    }\r\n                                            })()}\r\n                                            \r\n                                            <Card.Text className='boxoffice-content'>예매율 <span className='boxoffice-rate'><span>{movie.rate}</span> %</span></Card.Text>\r\n                                            <DropdownButton id=\"dropdown-basic-button\" title=\"예매하기\">\r\n                                                <Dropdown.Item href=\"#/action-1\">CGV</Dropdown.Item>\r\n                                                <Dropdown.Item href=\"#/action-2\">LOTTECINEMA</Dropdown.Item>\r\n                                                <Dropdown.Item href=\"#/action-3\">MEGA BOX</Dropdown.Item>\r\n                                            </DropdownButton>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className='boxoffice-btn'>\r\n                    <button className=\"btn before\" onClick={() => {\r\n                        slide_change(1);\r\n                    }}><img src={before}/></button>\r\n                    <button className=\"btn next\"onClick={() => {\r\n                        slide_change(0);\r\n                    }}><img src={next}/></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Boxoffice;","C:\\Users\\psu84\\movidic\\movie_react\\src\\search.js",["33","34","35"],"import { Form, Button, Row, Col, Accordion } from 'react-bootstrap';\r\nimport React, { useState }from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport axios from 'axios';\r\n\r\n\r\nimport './App.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction Search() {\r\n    \r\n    var [genre, genre_change] = useState(['드라마', 'SF/판타지', '공포', '로맨스', '모험', '스릴러', '범죄/느와르', '다큐멘터리', '코미디', '가족', '미스터리/서스펜스', '전쟁', '애니메이션', '뮤지컬', '액션/무협', '에로', '영화음악', '기타'])\r\n    const [startDate, setStartDate] = useState(new Date());\r\n\r\n    \r\n\r\n\r\n\r\n    const CLIENT_ID = 'nfKCf0KHoDkfBEgNu1p3'\r\n    const CLIENT_SECRET = 'Yjw1jMkKm9'\r\n    const headers = {\r\n        'X-Naver-Client-Id': CLIENT_ID,\r\n        'X-Naver-Client-Secret': CLIENT_SECRET\r\n    }\r\n    \r\n    return (\r\n        <div className='container mt-4'>\r\n            <div className='search-box'>\r\n                <Form>\r\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"\">\r\n                        <Form.Label column sm={2} style={{borderRight : '1px solid white'}}>Title</Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control type=\"text\" placeholder=\"Search...\" />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    \r\n                        \r\n                    <Accordion>\r\n                        <Accordion.Item eventKey=\"0\" >\r\n                            <Accordion.Header className='search-detail'>Search Detail</Accordion.Header>\r\n                            <Accordion.Body className='search-detail'>\r\n                                <Form.Group as={Row} className=\"mb-3 genreGroup\" controlId=\"\">\r\n                                    <Form.Label column sm={2} style={{ borderRight : '1px solid #212529'}}>장르</Form.Label>\r\n                                    <Col sm={{ span: 10}} style={{textAlign : 'left'}}>\r\n                                        {\r\n                                            genre.map(function(g, i ){\r\n                                                return <Form.Check inline label={g} className=\"genreName\"/>\r\n                                            })\r\n                                        }\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row} className=\"mb-3 genreGroup\" controlId=\"\">\r\n                                    <Form.Label column sm={2} style={{ borderRight : '1px solid #212529'}}>개봉연도</Form.Label>\r\n                                    <Col sm={{ span: 10}} className='mt-2 search-year'>\r\n                                        <div className=\"datepicker-content\">\r\n                                            <DatePicker \r\n                                                selected={startDate}\r\n                                                onChange={(date) => setStartDate(date)}\r\n                                                showYearPicker\r\n                                                dateFormat=\"yyyy\"/>\r\n                                        </div>\r\n                                        <div className=\"datepicker-style datepicker-content\" > 년 ~</div>\r\n                                        <div className=\"datepicker-content\">\r\n                                            <DatePicker \r\n                                                selected={startDate}\r\n                                                onChange={(date) => setStartDate(date)}\r\n                                                showYearPicker\r\n                                                dateFormat=\"yyyy\"/>\r\n                                        </div>\r\n                                        <div className=\"datepicker-style datepicker-content\" > 년</div>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                    </Accordion>\r\n\r\n                    <Button variant=\"primary\" className=\"mt-3 search-result\" onClick={() => {\r\n\r\n                        // 네이버 영화 검색 API 호출 코드\r\n                        axios.get('https://openapi.naver.com/v1/search/movie.json', {\r\n                            params : {\r\n                                query : 'black',\r\n                            },\r\n                            headers : headers,\r\n                        }).then(resonse => {\r\n                            var json = resonse.data.items\r\n                            console.log(resonse.data.items);\r\n                        }).catch( error => {\r\n                            console.log(error);\r\n                        })\r\n                        console.log('');\r\n                        \r\n                    }}\r\n                    >Search</Button>\r\n                </Form>\r\n\r\n            </div>\r\n\r\n            <SearchResult />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction SearchResult() {\r\n\r\n    var [searchrResult, searchResult_change] = useState(0);\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <div>\r\n                <h2 style={{float:'left', margin:'0'}}>Search Result</h2>\r\n                <p style={{float:'right'}}>총 <span className='h3 text-primary'>{searchrResult}</span> 개</p>\r\n            </div>\r\n            <div style={{clear : 'both'}}></div>\r\n            <hr style={{margin : '0'}}/>\r\n\r\n            <div className='searchResult-list'>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Search;",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":5,"column":8,"nodeType":"42","messageId":"43","endLine":5,"endColumn":13},{"ruleId":"44","severity":1,"message":"45","line":21,"column":7,"nodeType":"46","endLine":21,"endColumn":66},{"ruleId":"40","severity":1,"message":"47","line":13,"column":13,"nodeType":"42","messageId":"43","endLine":13,"endColumn":24},{"ruleId":"44","severity":1,"message":"45","line":158,"column":24,"nodeType":"46","endLine":158,"endColumn":43},{"ruleId":"44","severity":1,"message":"45","line":161,"column":24,"nodeType":"46","endLine":161,"endColumn":41},{"ruleId":"40","severity":1,"message":"48","line":12,"column":17,"nodeType":"42","messageId":"43","endLine":12,"endColumn":29},{"ruleId":"40","severity":1,"message":"49","line":86,"column":33,"nodeType":"42","messageId":"43","endLine":86,"endColumn":37},{"ruleId":"40","severity":1,"message":"50","line":106,"column":25,"nodeType":"42","messageId":"43","endLine":106,"endColumn":44},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'page_change' is assigned a value but never used.","'genre_change' is assigned a value but never used.","'json' is assigned a value but never used.","'searchResult_change' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]